{"version":3,"sources":["../src/collections/Map/GetOrGenerate.ts"],"sourcesContent":["import type { IMappish } from './IMappish.js';\nexport type GetOrGenerate<K, V, Z> = (key: K, args?: Z) => Promise<V>;\n\n/**\n * @inheritDoc getOrGenerate\n * @param map\n * @param fn\n * @returns\n */\n//eslint-disable-next-line functional/prefer-readonly-type\nexport const getOrGenerateSync =\n  <K, V, Z>(map: IMappish<K, V>, fn: (key: K, args?: Z) => V) =>\n    (key: K, args?: Z): V => {\n      //eslint-disable-next-line functional/no-let\n      let value = map.get(key);\n      if (value !== undefined) return value;\n      value = fn(key, args);\n      map.set(key, value);\n      return value;\n    };\n\n/**\n * Returns a function that fetches a value from a map, or generates and sets it if not present.\n * Undefined is never returned, because if `fn` yields that, an error is thrown.\n *\n * See {@link getOrGenerateSync} for a synchronous version.\n *\n * ```\n * const m = getOrGenerate(new Map(), (key) => {\n *  return key.toUppercase();\n * });\n *\n * // Not contained in map, so it will run the uppercase function,\n * // setting the value to the key 'hello'.\n * const v = await m(`hello`);  // Yields 'HELLO'\n * const v1 = await m(`hello`); // Value exists, so it is returned ('HELLO')\n * ```\n *\n */\n//eslint-disable-next-line functional/prefer-readonly-type\nexport const getOrGenerate =\n  <K, V, Z>(\n    map: IMappish<K, V>,\n    fn: (key: K, args?: Z) => Promise<V> | V\n  ): GetOrGenerate<K, V, Z> =>\n    async (key: K, args?: Z): Promise<V> => {\n      //eslint-disable-next-line functional/no-let\n      let value = map.get(key);\n      if (value !== undefined) return value; //Promise.resolve(value);\n      value = await fn(key, args);\n      if (value === undefined) throw new Error(`fn returned undefined`);\n      map.set(key, value);\n      return value;\n    };"],"mappings":";AAUO,IAAM,oBACX,CAAU,KAAqB,OAC7B,CAAC,KAAQ,SAAgB;AAEvB,MAAI,QAAQ,IAAI,IAAI,GAAG;AACvB,MAAI,UAAU;AAAW,WAAO;AAChC,UAAQ,GAAG,KAAK,IAAI;AACpB,MAAI,IAAI,KAAK,KAAK;AAClB,SAAO;AACT;AAqBG,IAAM,gBACX,CACE,KACA,OAEA,OAAO,KAAQ,SAAyB;AAEtC,MAAI,QAAQ,IAAI,IAAI,GAAG;AACvB,MAAI,UAAU;AAAW,WAAO;AAChC,UAAQ,MAAM,GAAG,KAAK,IAAI;AAC1B,MAAI,UAAU;AAAW,UAAM,IAAI,MAAM,uBAAuB;AAChE,MAAI,IAAI,KAAK,KAAK;AAClB,SAAO;AACT;","names":[]}