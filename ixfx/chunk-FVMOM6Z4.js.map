{"version":3,"sources":["../src/random/FloatSource.ts"],"sourcesContent":["\nimport { type RandomOptions, type RandomSource, defaultRandom } from \"./Types.js\";\nimport { throwNumberTest } from '../util/GuardNumbers.js';\n/**\n * Returns a function that produces random float values.\n * Use {@link float} to produce a valued directly.\n *\n * Random float between `max` (exclusive) and 0 (inclusive). Max is 1 if unspecified.\n *\n *\n * ```js\n * // Random number between 0..1 (but not including 1)\n * // (this would be identical to Math.random())\n * const r = floatSource();\n * r(); // Execute to produce random value\n *\n * // Random float between 0..100 (but not including 100)\n * const v = floatSource(100)();\n * ```\n *\n * Options can be used:\n * ```js\n * // Random float between 20..40 (possibly including 20, but always lower than 40)\n * const r = floatSource({ min: 20, max: 40 });\n * ```\n * @param maxOrOptions Maximum value (exclusive) or options\n * @returns Random number\n */\nexport const floatSource = (maxOrOptions: number | RandomOptions = 1): RandomSource => {\n  const options = typeof maxOrOptions === `number` ? { max: maxOrOptions } : maxOrOptions;\n  //eslint-disable-next-line functional/no-let\n  let max = options.max;\n  //eslint-disable-next-line functional/no-let\n  let min = options.min ?? 0;\n  const source = options.source ?? defaultRandom;\n\n  throwNumberTest(min, ``, `min`);\n  throwNumberTest(max, ``, `max`);\n\n  if (!options.min && max < 0) {\n    min = max;\n    max = 0;\n  }\n  if (min > max) {\n    throw new Error(`Min is greater than max. Min: ${ min } max: ${ max }`);\n  }\n\n  return () => source() * (max - min) + min;\n};\n\n/**\n * Returns a random float between `max` (exclusive) and 0 (inclusive). Max is 1 if unspecified.\n * Use {@link floatSource} to get a function that produces values. This is used internally.\n *\n * ```js\n * // Random number between 0..1 (but not including 1)\n * // (this would be identical to Math.random())\n * const v = float();\n * // Random float between 0..100 (but not including 100)\n * const v = float(100);\n * ```\n *\n * Options can be used:\n * ```js\n * // Random float between 20..40 (possibly including 20, but always lower than 40)\n * const v = float({ min: 20, max: 40 });\n * ```\n * @param maxOrOptions Maximum value (exclusive) or options\n * @returns Random number\n */\nexport const float = (maxOrOptions: number | RandomOptions = 1): number =>\n  floatSource(maxOrOptions)();"],"mappings":";;;;;;;;AA4BO,IAAM,cAAc,CAAC,eAAuC,MAAoB;AACrF,QAAM,UAAU,OAAO,iBAAiB,WAAW,EAAE,KAAK,aAAa,IAAI;AAE3E,MAAI,MAAM,QAAQ;AAElB,MAAI,MAAM,QAAQ,OAAO;AACzB,QAAM,SAAS,QAAQ,UAAU;AAEjC,kBAAgB,KAAK,IAAI,KAAK;AAC9B,kBAAgB,KAAK,IAAI,KAAK;AAE9B,MAAI,CAAC,QAAQ,OAAO,MAAM,GAAG;AAC3B,UAAM;AACN,UAAM;AAAA,EACR;AACA,MAAI,MAAM,KAAK;AACb,UAAM,IAAI,MAAM,iCAAkC,GAAI,SAAU,GAAI,EAAE;AAAA,EACxE;AAEA,SAAO,MAAM,OAAO,KAAK,MAAM,OAAO;AACxC;AAsBO,IAAM,QAAQ,CAAC,eAAuC,MAC3D,YAAY,YAAY,EAAE;","names":[]}