{"version":3,"sources":["../src/data/arrays/Pairwise.ts"],"sourcesContent":["import { guardArray } from \"./GuardArray.js\";\n\n/**\n * Combines values in pairwise fashion.\n * Throws an error if there are less than two entries.\n * \n * ```js\n * pairwise([1, 2, 3, 4, 5]);\n * Yields:\n * [[1,2],[2,3],[3,4],[4,5] ]\n * \n * pairwise([ 1, 2, 3, 4 ]);\n * Yields:\n * [1,2],[2,3],[3,4]\n * ```\n * @param values \n */\nexport function* pairwise<T>(values: Array<T>) {\n  guardArray(values, `values`);\n\n  if (values.length < 2) throw new Error(`Array needs to have at least two entries. Length: ${ values.length }`);\n\n  for (let index = 1; index < values.length; index++) {\n    yield [ values[ index - 1 ], values[ index ] ];\n  }\n}\n\n/**\n * Reduces in a pairwise fashion.\n *\n * Eg, if we have input array of [1, 2, 3, 4, 5], the\n * `reducer` fn will run with 1,2 as parameters, then 2,3, then 3,4 etc.\n * ```js\n * const values = [1, 2, 3, 4, 5]\n * reducePairwise(values, (acc, a, b) => {\n *  return acc + (b - a);\n * }, 0);\n * ```\n *\n * If input array has less than two elements, the initial value is returned.\n *\n * ```js\n * const reducer = (acc:string, a:string, b:string) => acc + `[${a}-${b}]`;\n * const result = reducePairwise(`a b c d e f g`.split(` `), reducer, `!`);\n * Yields: `![a-b][b-c][c-d][d-e][e-f][f-g]`\n * ```\n * @param array\n * @param reducer\n * @param initial\n * @returns\n */\nexport const pairwiseReduce = <V, X>(\n  array: ReadonlyArray<V>,\n  reducer: (accumulator: X, a: V, b: V) => X,\n  initial: X\n) => {\n  guardArray(array, `arr`);\n  if (array.length < 2) return initial;\n  //eslint-disable-next-line functional/no-let\n  for (let index = 0; index < array.length - 1; index++) {\n    initial = reducer(initial, array[ index ], array[ index + 1 ]);\n  }\n  return initial;\n};\n"],"mappings":";;;;;AAiBO,UAAU,SAAY,QAAkB;AAC7C,aAAW,QAAQ,QAAQ;AAE3B,MAAI,OAAO,SAAS,EAAG,OAAM,IAAI,MAAM,qDAAsD,OAAO,MAAO,EAAE;AAE7G,WAAS,QAAQ,GAAG,QAAQ,OAAO,QAAQ,SAAS;AAClD,UAAM,CAAE,OAAQ,QAAQ,CAAE,GAAG,OAAQ,KAAM,CAAE;AAAA,EAC/C;AACF;AA0BO,IAAM,iBAAiB,CAC5B,OACA,SACA,YACG;AACH,aAAW,OAAO,KAAK;AACvB,MAAI,MAAM,SAAS,EAAG,QAAO;AAE7B,WAAS,QAAQ,GAAG,QAAQ,MAAM,SAAS,GAAG,SAAS;AACrD,cAAU,QAAQ,SAAS,MAAO,KAAM,GAAG,MAAO,QAAQ,CAAE,CAAC;AAAA,EAC/D;AACA,SAAO;AACT;","names":[]}