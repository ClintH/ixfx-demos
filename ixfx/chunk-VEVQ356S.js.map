{"version":3,"sources":["../src/dom/index.ts","../src/dom/ShadowDom.ts","../src/dom/Log.ts","../src/dom/DomRx.ts","../src/dom/DataTable.ts","../src/dom/DataDisplay.ts","../src/data/ObjectTracker.ts","../src/data/PointTracker.ts","../src/dom/PointerVisualise.ts","../src/dom/ErrorHandler.ts","../src/dom/DragDrop.ts","../src/dom/InlineConsole.ts"],"sourcesContent":["export * from './Log.js';\n\nexport * from './DomRx.js';\nexport * from './Util.js';\nexport * as DataTable from './DataTable.js';\nexport * from './DataDisplay.js';\n\n/**\n * Functions for working with DOM elements\n */\nexport * as Forms from './Forms.js';\n\nexport * from './PointerVisualise.js';\n\nexport * from './ErrorHandler.js';\n\nexport * as DragDrop from './DragDrop.js';\n\nexport * from './InlineConsole.js';","export const addShadowCss = (\n  parentEl: Readonly<HTMLElement>,\n  styles: string\n): ShadowRoot => {\n  const styleEl = document.createElement(`style`);\n\n  //eslint-disable-next-line functional/immutable-data\n  styleEl.textContent = styles;\n  //eslint-disable-next-line functional/no-let\n  let shadowRoot;\n  if (parentEl.shadowRoot) {\n    shadowRoot = parentEl.shadowRoot;\n    //eslint-disable-next-line functional/immutable-data\n    shadowRoot.innerHTML = ``;\n  } else {\n    shadowRoot = parentEl.attachShadow({ mode: `open` });\n  }\n  shadowRoot.append(styleEl);\n  return shadowRoot;\n};\n","import { resolveEl } from './Util.js';\nimport { addShadowCss } from './ShadowDom.js';\n\nexport type LogOpts = {\n  readonly reverse?: boolean;\n  readonly capacity?: number;\n  readonly timestamp?: boolean;\n  readonly collapseDuplicates?: boolean;\n  readonly monospaced?: boolean;\n  readonly minIntervalMs?: number;\n  readonly css?: string;\n};\n\n//eslint-disable-next-line functional/no-mixed-types\nexport type Log = {\n  clear(): void;\n  error(messageOrError: unknown): void;\n  log(message?: string | object | number): HTMLElement | undefined;\n  warn(message?: string | object | number): HTMLElement | undefined;\n  //eslint-disable-next-line functional/prefer-immutable-types\n  append(el: HTMLElement): void;\n  dispose(): void;\n  readonly isEmpty: boolean;\n};\n\n/**\n * Allows writing to a DOM element in console.log style. Element grows in size, so use\n * something like `overflow-y: scroll` on its parent\n *\n * ```\n * const l = log(`#dataStream`); // Assumes HTML element with id `dataStream` exists\n * l.log(`Hi`);\n * l.log(); // Displays a horizontal rule\n *\n * const l = log(document.getElementById(`dataStream`), {\n *  timestamp: true,\n *  truncateEntries: 20\n * });\n * l.log(`Hi`);\n * l.error(`Some error`); // Adds class `error` to line\n * ```\n *\n * For logging high-throughput streams:\n * ```\n * // Silently drop log if it was less than 5ms since the last\n * const l = log(`#dataStream`, { minIntervalMs: 5 });\n *\n * // Only the last 100 entries are kept\n * const l = log(`#dataStream`, { capacity: 100 });\n * ```\n *\n * @param {(HTMLElement | string | undefined)} elOrId Element or id of element\n * @param {LogOpts} opts\n * @returns {Log}\n */\nexport const log = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  domQueryOrElement: HTMLElement | string,\n  opts: LogOpts = {}\n): Log => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const {\n    capacity = 0,\n    monospaced = true,\n    timestamp = false,\n    collapseDuplicates = true,\n    css = ``,\n  } = opts;\n\n  // eslint-disable-next-line functional/no-let\n  let added = 0;\n  // eslint-disable-next-line functional/no-let\n  let lastLog: string | undefined;\n  // eslint-disable-next-line functional/no-let\n  let lastLogRepeats = 0;\n\n  const parentElement = resolveEl<HTMLElement>(domQueryOrElement);\n  const fontFamily = monospaced\n    ? `Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", Monaco, \"Courier New\", Courier, monospace`\n    : `normal`;\n  const shadowRoot = addShadowCss(\n    parentElement,\n    `\n  .log {\n    font-family: ${ fontFamily };\n    background-color: var(--code-background-color);\n    padding: var(--padding1, 0.2em);\n    overflow-y: auto;\n    height:100%;\n  }\n  .timestamp {\n    margin-right: 0.5em;\n    opacity: 0.5;\n    font-size: 70%;\n    align-self: center;\n  }\n  .line {\n    display: flex;\n    padding-bottom: 0.1em;\n    padding-top: 0.1em;\n  }\n  .line:hover {\n  \n  }\n  .error {\n    color: red;\n  }\n  .badge {\n    border: 1px solid currentColor;\n    align-self: center;\n    font-size: 70%;\n    padding-left: 0.2em;\n    padding-right: 0.2em;\n    border-radius: 1em;\n    margin-left: 0.5em;\n    margin-right: 0.5em;\n  }\n  .msg {\n    flex: 1;\n    word-break: break-word;\n  }\n  ${ css }\n  `\n  );\n\n  const el = document.createElement(`div`);\n  // eslint-disable-next-line functional/immutable-data,unicorn/no-keyword-prefix\n  el.className = `log`;\n  shadowRoot.append(el);\n\n  const error = (messageOrError: string | Error) => {\n    const line = document.createElement(`div`);\n\n    if (typeof messageOrError === `string`) {\n      // eslint-disable-next-line functional/immutable-data\n      line.innerHTML = messageOrError;\n    } else if (messageOrError instanceof Error) {\n      const stack = messageOrError.stack;\n      line.innerHTML = stack === undefined ? messageOrError.toString() : stack.toString();\n    } else {\n      // eslint-disable-next-line functional/immutable-data\n      line.innerHTML = messageOrError as string;\n    }\n    line.classList.add(`error`);\n    append(line);\n    lastLog = undefined;\n    lastLogRepeats = 0;\n  };\n\n  //eslint-disable-next-line functional/no-let\n  let lastLogTime = 0;\n\n  const warn = (whatToLog: unknown = ``): HTMLElement | undefined => {\n    const element = log(whatToLog);\n    if (!element) return element;\n    element.classList.add(`warning`);\n    return element;\n  }\n  const log = (whatToLog: unknown = ``): HTMLElement | undefined => {\n    // eslint-disable-next-line functional/no-let\n    let message: string | undefined;\n    const interval = window.performance.now() - lastLogTime;\n    if (opts.minIntervalMs && interval < opts.minIntervalMs) return;\n    lastLogTime = window.performance.now();\n\n    if (typeof whatToLog === `object`) {\n      message = JSON.stringify(whatToLog);\n    } else if (whatToLog === undefined) {\n      message = `(undefined)`;\n    } else if (whatToLog === null) {\n      message = `(null)`;\n    } else if (typeof whatToLog === `number`) {\n      if (Number.isNaN(message)) message = `(NaN)`;\n      message = whatToLog.toString();\n    } else {\n      message = whatToLog as string;\n    }\n\n    if (message.length === 0) {\n      const rule = document.createElement(`hr`);\n      lastLog = undefined;\n      append(rule);\n    } else if (message === lastLog && collapseDuplicates) {\n      const lastElement = el.firstElementChild as HTMLElement;\n      // eslint-disable-next-line functional/no-let\n      let lastBadge = lastElement.querySelector(`.badge`);\n      if (lastBadge === null) {\n        lastBadge = document.createElement(`div`);\n        // eslint-disable-next-line functional/immutable-data,unicorn/no-keyword-prefix\n        lastBadge.className = `badge`;\n        lastElement.insertAdjacentElement(`beforeend`, lastBadge);\n      }\n      if (lastElement !== null) {\n        // eslint-disable-next-line functional/immutable-data\n        lastBadge.textContent = (++lastLogRepeats).toString();\n      }\n      return lastElement;\n    } else {\n      const line = document.createElement(`div`);\n      // eslint-disable-next-line functional/immutable-data\n      line.textContent = message;\n      append(line);\n      lastLog = message;\n      return line;\n    }\n  };\n\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const append = (line: HTMLElement) => {\n    if (timestamp) {\n      const wrapper = document.createElement(`div`);\n      const timestamp = document.createElement(`div`);\n      // eslint-disable-next-line functional/immutable-data,unicorn/no-keyword-prefix\n      timestamp.className = `timestamp`;\n      // eslint-disable-next-line functional/immutable-data\n      timestamp.textContent = new Date().toLocaleTimeString();\n      wrapper.append(timestamp, line);\n      line.classList.add(`msg`);\n      wrapper.classList.add(`line`);\n      line = wrapper;\n    } else {\n      line.classList.add(`line`, `msg`);\n    }\n\n    if (opts.reverse) {\n      el.append(line);\n    } else {\n      el.insertBefore(line, el.firstChild);\n    }\n\n    if (capacity > 0 && ++added > capacity * 2) {\n      while (added > capacity) {\n        el.lastChild?.remove();\n        added--;\n      }\n    }\n\n    if (opts.reverse) {\n      // Scroll to bottom\n      //eslint-disable-next-line functional/immutable-data\n      el.scrollTop = el.scrollHeight;\n    }\n    lastLogRepeats = 0;\n  };\n\n  const clear = () => {\n    // eslint-disable-next-line functional/immutable-data\n    el.innerHTML = ``;\n    lastLog = undefined;\n    lastLogRepeats = 0;\n    added = 0;\n  };\n\n  const dispose = () => {\n    el.remove();\n  };\n\n  return {\n    error,\n    log,\n    warn,\n    append,\n    clear,\n    dispose,\n    get isEmpty() {\n      return added === 0;\n    },\n  };\n};\n","import { fromEvent, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { resolveEl } from './Util.js';\n\nexport type PluckOpts = {\n  readonly pluck: string;\n};\n\nexport type TransformOpts = {\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any,functional/prefer-immutable-types\n  transform(event: Event): any;\n};\n\n/**\n * Responsive value\n */\n// eslint-disable-next-line functional/no-mixed-types\nexport type Rx<V> = {\n  /**\n   * Last value\n   */\n  readonly value: V;\n  /**\n   * Clears last value\n   */\n  readonly clear: () => void;\n};\n\nexport type DomRxOpts = PluckOpts | TransformOpts;\n\n/**\n * Keeps track of last event data\n *\n * ```js\n * const pointer = rx(`#myDiv`, `pointermove`).value;\n *\n * if (pointer.clientX > ...)\n * ```\n *\n * Pluck a field:\n * ```js\n * const pointerX = rx(`#myDiv`, `pointermove`, { pluck: `clientX` }).value;\n *\n * if (pointerX > ...)\n * ```\n * @template V Event type\n * @param opts\n * @return\n */\nexport const rx = <V extends object>(\n  //eslint-disable-next-line functional/prefer-immutable-types\n  elOrQuery: HTMLElement | string,\n  event: string,\n  opts?: DomRxOpts\n): Rx<V> => {\n  const el = resolveEl<HTMLElement>(elOrQuery);\n  const eventRx = fromEvent(el, event);\n  // @ts-expect-error\n  const value: V = {};\n\n  const clear = () => {\n    const keys = Object.keys(value);\n    for (const key of keys) {\n      // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any, @typescript-eslint/no-dynamic-delete\n      delete (value as any)[ key ];\n    }\n  };\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const setup = (sub: Observable<Event>): Rx<V> => {\n    sub.subscribe({\n      next: (latestValue) => {\n        // eslint-disable-next-line functional/immutable-data, @typescript-eslint/no-explicit-any\n        Object.assign(value, latestValue);\n      },\n    });\n    return {\n      value,\n      clear,\n    };\n  };\n\n  if (opts === undefined) return setup(eventRx);\n\n  if ((opts as PluckOpts).pluck) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return setup(eventRx.pipe(map((x) => (x as any)[ (opts as PluckOpts).pluck ])));\n  } else if ((opts as TransformOpts).transform) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return setup(eventRx.pipe(map((x) => (opts as TransformOpts).transform(x))));\n  }\n\n  return setup(eventRx);\n};\n","import { round } from '../Numbers.js';\nimport { resolveEl as resolveElement } from './Util.js';\nimport JSON5 from 'json5';\n\nexport type FormattingOptions = {\n  readonly precision?: number\n  readonly roundNumbers?: number\n}\nexport type DataTableOpts = FormattingOptions & {\n  readonly formatter?: DataFormatter\n  readonly objectsAsTables?: boolean\n  readonly idPrefix?: string\n};\n\nexport type DataTable<V> = {\n  update(data: V): void;\n  remove(): boolean;\n};\n\nconst toHtmlSimple = (v: any, options: FormattingOptions): string => {\n  if (v === null) return `(null)`;\n  if (v === undefined) return `(undefined)`;\n  if (typeof v === `boolean`) return v ? `true` : `false`;\n  if (typeof v === `string`) return `\"${ v }\"`;\n  if (typeof v === `number`) {\n    let vAsNumber = v;\n    if (options.roundNumbers !== undefined) vAsNumber = round(options.roundNumbers, v)\n    if (options.precision !== undefined) return vAsNumber.toFixed(options.precision);\n    return vAsNumber.toString();\n  }\n  if (typeof v === `object`) return toTableSimple(v, options);\n  return JSON5.stringify(v);\n}\n\nconst toTableSimple = (v: object, options: FormattingOptions): string => {\n  let html = `<div style=\"display:grid; grid-template-columns: repeat(2, 1fr)\">`;\n  for (const entry of Object.entries(v)) {\n    const value = toHtmlSimple(entry[ 1 ], options);\n    html += `<div class=\"label\" style=\"display:table-cell\">${ entry[ 0 ] }</div>\n      <div class=\"data\" style=\"display:table-cell\">${ value }</div>`\n  }\n  html += `</div>`;\n  return html;\n}\n\n/**\n * Creates a table of data points for each object in the map\n * ```\n * const t = DataTable.fromList(parentEl, map);\n * t.update(newMap);\n * ```\n */\nexport const fromList = (\n  parentOrQuery: HTMLElement | string,\n  //eslint-disable-next-line functional/prefer-readonly-type\n  data: Map<string, object>\n): DataTable<Map<string, object>> => {\n  const parent = resolveElement(parentOrQuery);\n  let container: HTMLDivElement | undefined = document.createElement(\n    `DIV`\n  ) as HTMLDivElement;\n  parent.append(container);\n\n  const remove = () => {\n    if (!container) return false;\n    container.remove();\n    container = undefined;\n    return true;\n  };\n\n  const update = (data: ReadonlyMap<string, object>) => {\n    const seenTables = new Set();\n\n    for (const [ key, value ] of data) {\n      const tKey = `table-${ key }`;\n      seenTables.add(tKey);\n      let t: HTMLElement | null = parent.querySelector(`#${ tKey }`);\n      if (t === null) {\n        t = document.createElement(`table`);\n        if (!t) throw new Error(`Could not create table element`);\n        //eslint-disable-next-line functional/immutable-data\n        t.id = tKey;\n        parent.append(t);\n      }\n\n      updateElement(t as HTMLTableElement, value);\n    }\n\n    // Remove tables that aren't present in map\n    // eslint-disable-next-line unicorn/prefer-spread\n    const tables = Array.from(parent.querySelectorAll(`table`));\n    for (const t of tables) {\n      if (!seenTables.has(t.id)) {\n        t.remove();\n      }\n    }\n  };\n\n  if (data) update(data);\n  return { update, remove };\n  // return (d: ReadonlyMap<string, object>) => {\n  //   update(d);\n  // };\n};\n\n/**\n * Format data. Return _undefined_ to signal that\n * data was not handled.\n */\nexport type DataFormatter = (data: object, path: string) => string | undefined;\n\n/**\n * Updates the given table element so each entry in the map is a\n * row in the table.\n *\n * Rows are keyed by the map key. Rows with keys not found in the map are deleted.\n * @param t Table\n * @param data Map of data\n * @param opts Options\n * @returns\n */\nconst updateElement = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  t: HTMLTableElement,\n  data: object,\n  opts: DataTableOpts = {}\n) => {\n  const precision = opts.precision ?? 2;\n  const idPrefix = opts.idPrefix ?? ``;\n  const objectsAsTables = opts.objectsAsTables ?? false;\n\n  if (data === undefined) {\n    //eslint-disable-next-line functional/immutable-data\n    t.innerHTML = ``;\n    return;\n  }\n  const seenRows = new Set();\n\n  for (const [ key, value ] of Object.entries(data)) {\n    const domKey = `${ idPrefix }-row-${ key }`;\n    // Keep track of keys currently in object\n    seenRows.add(domKey);\n\n    // Is there already a row for this key?\n    let rowEl = t.querySelector(`tr[data-key='${ domKey }']`);\n    if (rowEl === null) {\n      // No row, add it\n      rowEl = document.createElement(`tr`);\n      t.append(rowEl);\n      rowEl.setAttribute(`data-key`, domKey);\n\n      const keyEl = document.createElement(`td`);\n      keyEl.textContent = key;\n      keyEl.classList.add(`label`);\n      rowEl.append(keyEl);\n    }\n\n    // Is there already a cell for the value?\n    let valEl = rowEl.querySelector(`td[data-key='${ domKey }-val']`);\n\n    if (valEl === null) {\n      // No, create the cell\n      valEl = document.createElement(`td`);\n      valEl.classList.add(`data`);\n      valEl.setAttribute(`data-key`, `${ domKey }-val`);\n      rowEl.append(valEl);\n    }\n\n    // Format the value as HTML\n    let valueHTML: string | undefined;\n    if (opts.formatter) {\n      valueHTML = opts.formatter(value, key);\n    }\n\n    // If there's no formatter, or not handled...\n    if (valueHTML === undefined) {\n      if (typeof value === `object`) {\n        valueHTML = objectsAsTables ? toTableSimple(value, opts) : JSON5.stringify(value);\n      } else if (typeof value === `number`) {\n        valueHTML = opts.roundNumbers ? Math.round(value).toString() : value.toFixed(precision);\n      } else if (typeof value === `boolean`) {\n        valueHTML = value ? `true` : `false`;\n      } else if (typeof value === `string`) {\n        valueHTML = `\"${ value }\"`;\n      } else {\n        valueHTML = JSON.stringify(value);\n      }\n    }\n\n    // Set the cell value\n    (valEl as HTMLElement).innerHTML = valueHTML;\n  }\n\n  // Remove rows that aren't present in data\n  // eslint-disable-next-line unicorn/prefer-spread\n  const rows = Array.from(t.querySelectorAll(`tr`));\n  for (const r of rows) {\n    const key = r.getAttribute(`data-key`);\n    if (!seenRows.has(key)) {\n      r.remove();\n    }\n  }\n};\n\n/**\n * Creates a HTML table where each row is a key-value pair from `data`.\n * First column is the key, second column data.\n *\n * ```js\n * const dt = fromObject(`#hostDiv`);\n * ```\n *\n * `dt` is a function to call when you want to update data:\n *\n * ```js\n * dt({\n *  name: `Blerg`,\n *  height: 120\n * });\n * ```\n */\nexport const fromObject = (\n  parentOrQuery: HTMLElement | string,\n  data?: object,\n  opts?: DataTableOpts\n): DataTable<object> => {\n  const parent = resolveElement(parentOrQuery);\n  const idPrefix = opts?.idPrefix ?? Math.floor(Math.random() * 1000).toString();\n\n  let t: HTMLTableElement | undefined = document.createElement(`table`);\n  parent.append(t);\n\n  const remove = () => {\n    if (!t) return false;\n    t.remove();\n    t = undefined;\n    return true;\n  };\n\n  // Update already if there's initial data\n  if (data) updateElement(t, data, opts);\n\n  const update = (d: object) => {\n    if (!t) throw new Error(`Table disposed`);\n    updateElement(t, d, { ...opts, idPrefix });\n  };\n\n  return { remove, update };\n};\n","import { fromObject } from \"./DataTable.js\";\n\nexport type DataDisplayOptions = {\n  theme?: `dark` | `light`\n}\n\n// TODO Visually show data which has changed since last update\n// TODO Click on a field to show a sparkline for it\n/**\n * Creates a simple display for data. Designed to show ixfx state data\n * \n * ```js\n * // Create once\n * const display = new DataDisplay();\n * \n * // Call .update to show state\n * display.update(state);\n * ```\n */\nexport class DataDisplay {\n\n  dataTable;\n\n  /**\n   * Constructor\n   * @param darkMode \n   */\n  constructor(options: DataDisplayOptions = {}) {\n    const theme = options.theme ?? `dark`;\n\n    const existing = document.querySelector(`#ixfx-data-display`);\n    if (existing !== null) throw new Error(`DataDisplay already loaded on this page`);\n\n    const container = document.createElement(`div`);\n    container.id = `ixfx-data-display`;\n    container.classList.add(`theme-${ theme }`);\n\n    const css = document.createElement(`style`);\n    css.textContent = `\n    #ixfx-data-display {\n      background: white;\n      color: black;\n      border: 2px solid hsl(0deg 0.61% 90%);\n      border-radius: 4px;\n      z-index: 1000;\n      opacity: 40%;\n      padding: 1em;\n      font-family: monospace;\n      position: fixed;\n      right: 1em;\n      top: 1em;\n    }\n    #ixfx-data-display.theme-dark {\n      background: black;\n      color: white;\n      border: 2px solid hsl(0deg 0.61% 10%);\n    }\n    #ixfx-data-display:hover {\n      opacity: 100%;\n    }\n    #ixfx-data-display table {\n      border-collapse: collapse;\n    }\n    #ixfx-data-display tr:not(:last-child) {\n      border-bottom: 2px solid hsl(0deg 0.61% 90%);\n    }\n    #ixfx-data-display.dark tr:not(:last-child) {\n      border-bottom: 2px solid hsl(0deg 0.61% 10%);\n    }\n    #ixfx-data-display td {\n      padding-bottom: 0.4em;\n      padding-top: 0.4em;\n    }\n    #ixfx-data-display .label {\n      color: hsl(0deg 0.61% 60%);\n      text-align: right;\n      padding-right: 0.5em;\n    }\n    #ixfx-data-display.theme-dark .label {\n      color: gray;\n    }\n    `\n\n    container.style.display = `inline-block`;\n    document.body.append(css);\n    document.body.append(container);\n\n    this.dataTable = fromObject(container, undefined, {\n      objectsAsTables: true,\n      roundNumbers: 2\n    });\n  }\n\n  update(data: object) {\n    this.dataTable.update(data);\n  }\n}","import type { TimestampedObject, TrackedValueOpts } from './TrackedValue.js';\nimport { TrackerBase } from './TrackerBase.js';\n\n/**\n * A tracked value of type `V`.\n */\nexport abstract class ObjectTracker<V extends object, SeenResultType> extends TrackerBase<V, SeenResultType> {\n  //abstract onSeen(_p: Array<V>): SeenResultType;\n\n  values: Array<TimestampedObject<V>>;\n\n  constructor(opts: TrackedValueOpts = {}) {\n    super(opts);\n    this.values = [];\n  }\n\n  onTrimmed() {\n    // no-op\n  }\n\n  /**\n   * Reduces size of value store to `limit`. \n   * Returns number of remaining items\n   * @param limit\n   */\n  trimStore(limit: number): number {\n    if (limit >= this.values.length) return this.values.length;\n    // Index 0 will be the oldest\n    this.values = this.values.slice(-limit);\n    return this.values.length;\n  }\n\n  /**\n   * Allows sub-classes to be notified when a reset happens\n   * @ignore\n   */\n  onReset() {\n    this.values = [];\n  }\n\n  /**\n   * Tracks a value\n   * @ignore\n   */\n  filterData(p: Array<V> | Array<TimestampedObject<V>>): Array<TimestampedObject<V>> {\n    // Make sure values have a timestamp\n    const ts = p.map((v) =>\n      `at` in v\n        ? v\n        : {\n          ...v,\n          at: Date.now(),\n        }\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const last = ts.at(-1)!;\n\n    if (this.storeIntermediate) this.values.push(...ts);\n    else switch (this.values.length) {\n      case 0: {\n        // Add as initial value\n        this.values.push(last);\n        break;\n      }\n      case 1: {\n        // Add last value\n        this.values.push(last);\n        break;\n      }\n      case 2: {\n        // Replace last value\n        this.values[ 1 ] = last;\n        break;\n      }\n    }\n    return ts;\n  }\n\n  /**\n   * Last seen value. If no values have been added, it will return the initial value\n   */\n  get last() {\n    if (this.values.length === 1) return this.values[ 0 ];\n    //eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return this.values.at(-1)!;\n  }\n\n  /**\n   * Returns the initial value\n   */\n  get initial() {\n    return this.values.at(0);\n  }\n\n  /**\n   * Returns number of recorded values (includes the initial value in the count)\n   */\n  get size() {\n    return this.values.length;\n  }\n\n  /**\n   * Returns the elapsed time, in milliseconds since the initial value\n   */\n  get elapsed(): number {\n    return Date.now() - this.values[ 0 ].at;\n  }\n\n}\n","import * as Points from '../geometry/point/index.js';\nimport {\n  TrackedValueMap,\n  type TrackedValueOpts as TrackOpts,\n  type TimestampedObject,\n} from './TrackedValue.js';\nimport { ObjectTracker } from './ObjectTracker.js';\nimport { Lines, Vectors } from '../geometry/index.js';\nimport type { PolarCoord } from '../geometry/Types.js';\nimport type { Line, PolyLine } from '../geometry/Types.js';\n\n/**\n * Information about seen points\n */\nexport type PointTrack = Points.PointRelationResult & {\n  // readonly speedFromInitial:number\n};\n\n/**\n * Results of point tracking\n */\nexport type PointTrackerResults = {\n  /**\n   * Relation of last point to previous point\n   */\n  readonly fromLast: PointTrack;\n  /**\n   * Relation of last point to initial point.\n   * \n   * When the tracker is reset or resizes (eg. if it reaches its capacity), the\n   * initial point will be the first new point. Thus, the initial point\n   * always maintains some time horizon\n   */\n  readonly fromInitial: PointTrack;\n  readonly values: ReadonlyArray<Points.Point>;\n};\n\n/**\n * Point tracker. Create via `pointTracker()`.\n *\n */\nexport class PointTracker extends ObjectTracker<Points.Point, PointTrackerResults> {\n  /**\n   * Function that yields the relation from initial point\n   */\n  initialRelation: Points.PointRelation | undefined;\n\n  /**\n   * Last result\n   */\n  lastResult: PointTrackerResults | undefined;\n\n  constructor(opts: TrackOpts = {}) {\n    super(opts);\n  }\n\n  onTrimmed(): void {\n    // Force new relation calculations\n    this.initialRelation = undefined;\n  }\n\n  /**\n   * Returns the last x coord\n   */\n  get x() {\n    return this.last.x;\n  }\n\n  /**\n   * Returns the last y coord\n   */\n  get y() {\n    return this.last.y;\n  }\n\n  /**\n   * @ignore\n   */\n  onReset(): void {\n    super.onReset();\n    this.lastResult = undefined;\n    this.initialRelation = undefined;\n  }\n\n  seenEvent(p: PointerEvent): PointTrackerResults {\n    if (`getCoalescedEvents` in p) {\n      const events = p.getCoalescedEvents();\n      const asPoints = events.map(event => ({ x: event.clientX, y: event.clientY }));\n      return this.seen(...asPoints);\n    } else {\n      // @ts-expect-error\n      return this.seen({ x: p.clientX, y: p.clientY });\n    }\n  }\n\n  /**\n   * Tracks a point, returning data on its relation to the\n   * initial point and the last received point.\n   * \n   * Use {@link seenEvent} to track a raw `PointerEvent`.\n   * \n   * @param p Point\n   */\n  computeResults(\n    _p: Array<TimestampedObject<Points.Point>>\n  ): PointTrackerResults {\n    const currentLast = this.last;\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const previousLast = this.values.at(-2);\n\n    if (this.initialRelation === undefined && this.initial) {\n      // Don't yet have an initial relation function\n      this.initialRelation = Points.relation(this.initial);\n    } else if (this.initialRelation === undefined) {\n      // Don't have an initial relation, but also don't have an initial point :()\n      throw new Error(`Bug: No initialRelation, and this.inital is undefined?`);\n    }\n\n    // Make a new relator based on previous point\n    const lastRelation = previousLast === undefined ? Points.relation(currentLast) : Points.relation(previousLast);\n\n    // Compute relation from initial point to latest\n    const initialRel: PointTrack = this.initialRelation(currentLast);\n\n    const speed = previousLast === undefined ? 0 : Lines.length(previousLast, currentLast) / (currentLast.at - previousLast.at);\n\n    // Compute relation from current point to the previous\n    const lastRel: PointTrack = {\n      ...lastRelation(currentLast),\n      speed,\n    };\n\n    const r: PointTrackerResults = {\n      fromInitial: initialRel,\n      fromLast: lastRel,\n      values: [ ...this.values ],\n    };\n    this.lastResult = r;\n    return r;\n  }\n\n  /**\n   * Returns a polyline representation of stored points.\n   * Returns an empty array if points were not saved, or there's only one.\n   */\n  get line(): PolyLine {\n    if (this.values.length === 1) return [];\n    return Lines.joinPointsToLines(...this.values);\n  }\n\n  /**\n   * Returns a vector of the initial/last points of the tracker.\n   * Returns as a polar coordinate\n   */\n  get vectorPolar(): PolarCoord {\n    return Vectors.fromLinePolar(this.lineStartEnd);\n  }\n\n  /**\n   * Returns a vector of the initial/last points of the tracker.\n   * Returns as a Cartesian coordinate\n   */\n  get vectorCartesian(): Points.Point {\n    return Vectors.fromLineCartesian(this.lineStartEnd);\n  }\n\n  /**\n   * Returns a line from initial point to last point.\n   *\n   * If there are less than two points, Lines.Empty is returned\n   */\n  get lineStartEnd(): Line {\n    const initial = this.initial;\n    if (this.values.length < 2 || !initial) return Lines.Empty;\n    return {\n      a: initial,\n      b: this.last,\n    };\n  }\n\n  /**\n   * Returns distance from latest point to initial point.\n   * If there are less than two points, zero is returned.\n   *\n   * This is the direct distance from initial to last,\n   * not the accumulated length.\n   * @returns Distance\n   */\n  distanceFromStart(): number {\n    const initial = this.initial;\n    return this.values.length >= 2 && initial !== undefined ? Points.distance(initial, this.last) : 0;\n  }\n\n  /**\n   * Difference between last point and the initial point, calculated\n   * as a simple subtraction of x & y.\n   *\n   * `Points.Placeholder` is returned if there's only one point so far.\n   */\n  difference(): Points.Point {\n    const initial = this.initial;\n    return this.values.length >= 2 && initial !== undefined ? Points.subtract(this.last, initial) : Points.Placeholder;\n  }\n\n  /**\n   * Returns angle (in radians) from latest point to the initial point\n   * If there are less than two points, undefined is return.\n   * @returns Angle in radians\n   */\n  angleFromStart(): number | undefined {\n    const initial = this.initial;\n    if (initial !== undefined && this.values.length > 2) {\n      return Points.angle(initial, this.last);\n    }\n  }\n\n  /**\n   * Returns the total length of accumulated points.\n   * Returns 0 if points were not saved, or there's only one\n   */\n  get length(): number {\n    if (this.values.length === 1) return 0;\n    const l = this.line;\n    return Lines.length(l);\n  }\n}\n\n/**\n * A {@link TrackedValueMap} for points. Uses {@link PointTracker} to\n * track added values.\n */\nexport class TrackedPointMap extends TrackedValueMap<\n  Points.Point,\n  PointTracker,\n  PointTrackerResults\n> {\n  constructor(opts: TrackOpts = {}) {\n    super((key, start) => {\n      if (start === undefined) throw new Error(`Requires start point`);\n      const p = new PointTracker({\n        ...opts,\n        id: key,\n      });\n      p.seen(start);\n      return p;\n    });\n  }\n\n  /**\n   * Track a PointerEvent\n   * @param event\n   */\n  seenEvent(event: PointerEvent): Promise<Array<PointTrackerResults>> {\n    if (`getCoalescedEvents` in event) {\n      const events = event.getCoalescedEvents();\n      const seens = events.map(subEvent => super.seen(subEvent.pointerId.toString(), subEvent));\n      return Promise.all(seens);\n    } else {\n      return Promise.all([ super.seen((event as PointerEvent).pointerId.toString(), event) ]);\n    }\n  }\n}\n\n/**\n * Track several named points over time, eg a TensorFlow body pose point.\n * Call `seen()` to track a point. Mutable. If you want to compare\n * a single coordinate with a reference coordinate,  may be a better choice.\n *\n * See also:\n * * [Geometry.Points.relation](Geometry.Points.relation.html): Compute relation info between two points\n * * [Data.pointTracker](Data.pointTracker-1.html): Track relation between points over time\n * * [Guide to Trackers](https://clinth.github.io/ixfx-docs/data/trackers/)\n * \n * Basic usage\n * ```js\n * import { pointsTracker } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * const pt = pointsTracker();\n *\n * // Track a point under a given id\n * document.addEventListener(`pointermove`, e => {\n *  const info = await pt.seen(e.pointerId, { x: e.x, y: e.y });\n *  // Yields some info on relation of the point to initial value\n * });\n * ```\n *\n * Do something with last values for all points\n * ```js\n * const c = Points.centroid(...Array.from(pt.last()));\n * ```\n *\n * More functions...\n * ```js\n * pt.size;       // How many named points are being tracked\n * pt.delete(id); // Delete named point\n * pt.reset();    // Clear data\n * ```\n *\n * Accessing by id:\n *\n * ```js\n * pt.get(id);  // Get named point (or _undefined_)\n * pt.has(id);  // Returns true if id exists\n * ```\n *\n * Iterating over data\n *\n * ```js\n * pt.trackedByAge(); // Iterates over tracked points, sorted by age (oldest first)\n * pt.tracked(); // Tracked values\n * pt.ids();     // Iterator over ids\n *\n * // Last received value for each named point\n * pt.last();\n *\n * pt.initialValues(); // Iterator over initial values for each point\n * ```\n *\n * You can work with 'most recently updated' points:\n *\n * ```js\n * // Iterates over points, sorted by age (oldest first)\n * pt.valuesByAge();\n * ```\n *\n * Options:\n * * `id`: Id of this tracker. Optional\n * * `sampleLimit`: How many samples to store\n * * `storeIntermediate`: If _true_, all points are stored internally\n * * `resetAfterSamples`: If set above 0, it will automatically reset after the given number of samples have been seen\n * @param opts\n * @returns\n */\nexport const pointsTracker = (opts: TrackOpts = {}) =>\n  new TrackedPointMap(opts);\n\n/**\n * A tracked point. Create via {@link pointTracker}. Mutable. Useful for monitoring how\n * it changes over time. Eg. when a pointerdown event happens, to record the start position and then\n * track the pointer as it moves until pointerup.\n *\n * See also\n * * [Playground](https://clinth.github.io/ixfx-play/data/point-tracker/index.html)\n * * {@link pointsTracker}: Track several points, useful for multi-touch.\n * * [Guide to Trackers](https://clinth.github.io/ixfx-docs/data/trackers/)\n * \n * ```js\n * import { pointTracker } from 'https://unpkg.com/ixfx/dist/data.js';\n *\n * // Create a tracker on a pointerdown\n * const t = pointTracker();\n *\n * // ...and later, tell it when a point is seen (eg. pointermove)\n * const nfo = t.seen({x: evt.x, y:evt.y});\n * // nfo gives us some details on the relation between the seen point, the start, and points inbetween\n * // nfo.angle, nfo.centroid, nfo.speed etc.\n * ```\n *\n * Compute based on last seen point\n * ```js\n * t.angleFromStart();\n * t.distanceFromStart();\n * t.x / t.y\n * t.length; // Total length of accumulated points\n * t.elapsed; // Total duration since start\n * t.lastResult; // The PointSeenInfo for last seen point\n * ```\n *\n * Housekeeping\n * ```js\n * t.reset(); // Reset tracker\n * ```\n *\n * By default, the tracker only keeps track of the initial point and\n * does not store intermediate 'seen' points. To use the tracker as a buffer,\n * set `storeIntermediate` option to _true_.\n *\n * ```js\n * // Keep only the last 10 points\n * const t = pointTracker({\n *  sampleLimit: 10\n * });\n *\n * // Store all 'seen' points\n * const t = pointTracker({\n *  storeIntermediate: true\n * });\n *\n * // In this case, the whole tracker is automatically\n * // reset after 10 samples\n * const t = pointTracker({\n *  resetAfterSamples: 10\n * })\n * ```\n *\n * When using a buffer limited by `sampleLimit`, the 'initial' point will be the oldest in the\n * buffer, not actually the very first point seen.\n */\nexport const pointTracker = (opts: TrackOpts = {}) => new PointTracker(opts);\n","import {\n  pointsTracker,\n} from '../data/PointTracker.js';\nimport { fullSizeElement, resolveEl as resolveElement } from './Util.js';\nimport * as Svg from '../visual/Svg.js';\n\nexport type Opts = {\n  readonly touchRadius?: number;\n  readonly mouseRadius?: number;\n  readonly trace?: boolean;\n  readonly hue?: number;\n};\n\n/**\n * Visualises pointer events within a given element.\n *\n * ```js\n * // Show pointer events for whole document\n * pointerVis(document);\n * ```\n *\n * Note you may need to set the following CSS properties on the target element:\n *\n * ```css\n * touch-action: none;\n * user-select: none;\n * overscroll-behavior: none;\n * ```\n *\n * Options\n * * touchRadius/mouseRadius: size of circle for these kinds of pointer events\n * * trace: if true, intermediate events are captured and displayed\n * @param elOrQuery\n * @param opts\n */\nexport const pointerVisualise = (\n  //eslint-disable-next-line functional/prefer-immutable-types\n  elOrQuery: HTMLElement | string,\n  opts: Opts = {}\n) => {\n  const touchRadius = opts.touchRadius ?? 45;\n  const mouseRadius = opts.touchRadius ?? 20;\n  const trace = opts.trace ?? false;\n  const hue = opts.hue ?? 100;\n\n  const startFillStyle = `hsla(${ hue }, 100%, 10%, 10%)`;\n\n  //eslint-disable-next-line functional/no-let\n  let currentHue = hue;\n\n  const el = resolveElement(elOrQuery);\n  const tracker = pointsTracker({\n    storeIntermediate: trace,\n  });\n\n  //eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const svg = document.createElementNS(\n    `http://www.w3.org/2000/svg`,\n    `svg`\n  ) as any as SVGElement & HTMLElement;\n  //eslint-disable-next-line functional/immutable-data\n  svg.id = `pointerVis`;\n  svg.style.zIndex = `-1000`;\n  svg.style.position = `fixed`;\n  svg.style.top = `0`;\n  svg.style.left = `0`;\n  svg.style.width = `100%`;\n  svg.style.height = `100%`;\n  svg.style.boxSizing = `border-box`;\n  svg.style.border = `3px solid red`;\n  svg.style.pointerEvents = `none`;\n  svg.style.touchAction = `none`;\n\n  fullSizeElement(svg);\n  let pointerCount = 0;\n\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const lostPointer = (event: PointerEvent) => {\n    const id = event.pointerId.toString();\n    tracker.delete(id);\n    currentHue = hue;\n    svg.querySelector(`#pv-start-${ id }`)?.remove();\n\n    for (let index = 0; index < pointerCount + 10; index++) {\n      svg.querySelector(`#pv-progress-${ id }-${ index }`)?.remove();\n    }\n    pointerCount = 0;\n  };\n\n  const trackPointer = async (event: PointerEvent) => {\n    const id = event.pointerId.toString();\n    const pt = { x: event.x, y: event.y };\n    const type = event.pointerType;\n    if (event.type === `pointermove` && !tracker.has(id)) {\n      return;\n    }\n    const info = (await tracker.seen(event.pointerId.toString(), { x: event.clientX, y: event.clientY }));\n\n    if (info.values.length === 1) {\n      const el = Svg.Elements.circle(\n        {\n          ...info.values[ 0 ],\n          radius: type === `touch` ? touchRadius : mouseRadius,\n        },\n        svg,\n        {\n          fillStyle: startFillStyle,\n        },\n        `#pv-start-${ id }`\n      );\n      el.style.pointerEvents = `none`;\n      el.style.touchAction = `none`;\n    }\n\n    const fillStyle = `hsla(${ currentHue }, 100%, 50%, 50%)`;\n\n    const el2 = Svg.Elements.circle(\n      { ...pt, radius: type === `touch` ? touchRadius : mouseRadius },\n      svg,\n      {\n        fillStyle,\n      },\n      `#pv-progress-${ id }-${ info.values.length }`\n    );\n    el2.style.pointerEvents = `none`;\n    el2.style.touchAction = `none`;\n    currentHue += 1;\n    pointerCount = info.values.length;\n  };\n\n  document.body.append(svg);\n\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  el.addEventListener(`pointerdown`, trackPointer);\n  // eslint-disable-next-line @typescript-eslint/no-misused-promises\n  el.addEventListener(`pointermove`, trackPointer);\n  el.addEventListener(`pointerup`, lostPointer);\n  el.addEventListener(`pointerleave`, lostPointer);\n  el.addEventListener(`contextmenu`, (event) => {\n    event.preventDefault();\n  });\n};\n","import { getErrorMessage } from \"../debug/GetErrorMessage.js\";\n\n/**\n * Creates an error handler to show errors on-screen.\n * This is useful when testing on mobile devices that lack access to the console.\n *\n * ```js\n * const e = defaultErrorHandler();\n * ```\n *\n * Manual control:\n * ```js\n * const e = defaultErrorHandler();\n * e.show(someError);\n * e.hide();\n * ```\n * @returns\n */\nexport const defaultErrorHandler = () => {\n  //eslint-disable-next-line functional/no-let\n  let enabled = true;\n  const container = document.createElement(`div`);\n  container.style.color = `black`;\n  container.style.border = `2px solid red`;\n  container.style.backgroundColor = `hsl(0, 80%, 90%)`;\n  container.style.padding = `1em`;\n  container.style.display = `none`;\n  container.style.top = `1em`;\n  container.style.left = `1em`;\n  container.style.position = `absolute`;\n\n  container.style.fontFamily = `monospace`;\n\n  const messageElement = document.createElement(`div`);\n  messageElement.style.maxWidth = `50vw`;\n  messageElement.style.maxHeight = `50vh`;\n  messageElement.style.overflowY = `scroll`;\n\n  container.innerHTML = `<h1>Error</h1>`;\n  container.append(messageElement);\n\n  const styleButton = (b: HTMLButtonElement) => {\n    b.style.padding = `0.3em`;\n    b.style.marginTop = `1em`;\n  };\n\n  const buttonClose = document.createElement(`button`);\n  buttonClose.textContent = `Close`;\n  buttonClose.addEventListener(`click`, () => {\n    hide();\n  });\n\n  const buttonStop = document.createElement(`button`);\n  buttonStop.textContent = `Stop displaying errors`;\n  buttonStop.addEventListener(`click`, () => {\n    enabled = false;\n    hide();\n  });\n\n  styleButton(buttonClose);\n  styleButton(buttonStop);\n\n  container.append(buttonClose);\n  container.append(buttonStop);\n  document.body.append(container);\n\n  const show = (ex: Error | string | Event) => {\n    container.style.display = `inline`;\n    messageElement.innerHTML += (ex as any).stack ? `<pre>${ (ex as any).stack }</pre>` : `<p>${ getErrorMessage(ex) }</p>`;\n  };\n\n  const hide = () => {\n    container.style.display = `none`;\n  };\n\n  // eslint-disable-next-line unicorn/prefer-add-event-listener\n  window.onerror = (message, url, lineNo, colNo, error) => {\n    if (enabled) {\n      if (error) {\n        console.log(error);\n        show(error);\n      } else {\n        console.log(message);\n        show(message);\n      }\n    }\n  };\n\n  window.addEventListener(`unhandledrejection`, (event) => {\n    console.log(event.reason);\n    if (enabled) {\n      show(event.reason);\n    }\n  });\n  return { show, hide };\n};\n","import type { Point } from '../geometry/Types.js';\nimport { Points } from '../geometry/index.js';\n\nexport type DragState = {\n  readonly token?: object;\n  readonly initial: Point;\n  readonly delta: Point;\n};\n\nexport type DragStart = {\n  readonly allow: boolean;\n  readonly token: object;\n};\nexport type DragListener = {\n  readonly start?: () => DragStart;\n  readonly progress?: (state: DragState) => boolean;\n  readonly abort?: (reason: string, state: DragState) => void;\n  readonly success?: (state: DragState) => void;\n};\n\n//eslint-disable-next-line functional/prefer-immutable-types\nexport const draggable = (elem: SVGElement, listener: DragListener) => {\n  //eslint-disable-next-line functional/no-let\n  let initial = Points.Placeholder;\n  //eslint-disable-next-line functional/no-let\n  let token: object;\n\n  // De-select if there's a click elsewhere\n  const onParentClick = () => {\n    const selected = elem.classList.contains(`drag-sel`);\n    if (selected) {\n      elem.classList.remove(`drag-sel`);\n    }\n  };\n\n  // Click to select\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const onElementClick = (event: MouseEvent) => {\n    const selected = elem.classList.contains(`drag-sel`);\n    if (selected) {\n      elem.classList.remove(`drag-sel`);\n    } else {\n      elem.classList.add(`drag-sel`);\n    }\n    event.stopPropagation();\n  };\n\n  elem.ownerDocument.addEventListener(`click`, onParentClick);\n  elem.addEventListener(`click`, onElementClick);\n\n  // Remove event handlers\n  const dragCleanup = () => {\n    elem.classList.remove(`drag-progress`);\n\n    elem.ownerDocument.removeEventListener(`pointermove`, onPointerMove);\n    elem.ownerDocument.removeEventListener(`pointerup`, onPointerUp);\n    elem.ownerDocument.removeEventListener(`pointercancel`, onDragCancel);\n  };\n\n  const dispose = () => {\n    console.log(`drag dispose`);\n    if (elem.classList.contains(`drag-progress`)) {\n      onDragCancel(undefined, `dispose`);\n    } else {\n      dragCleanup();\n    }\n    elem.ownerDocument.removeEventListener(`click`, onParentClick);\n    elem.removeEventListener(`click`, onElementClick);\n  };\n\n  // Dragging\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const onPointerMove = (moveEvent: PointerEvent) => {\n    moveEvent.preventDefault();\n    moveEvent.stopPropagation();\n\n    const offset = Points.isPlaceholder(initial)\n      ? { x: moveEvent.offsetX, y: moveEvent.offsetY }\n      : {\n        x: moveEvent.x - initial.x,\n        y: moveEvent.y - initial.y,\n      };\n    const state: DragState = {\n      delta: offset,\n      initial: initial,\n      token,\n    };\n    if (typeof listener.progress !== `undefined` && !listener.progress(state)) {\n      onDragCancel(undefined, `discontinued`);\n    }\n  };\n\n  // Done dragging\n  //eslint-disable-next-line functional/prefer-immutable-types\n  const onPointerUp = (upEvent: PointerEvent) => {\n    dragCleanup();\n    const offset = {\n      x: upEvent.x - initial.x,\n      y: upEvent.y - initial.y,\n    };\n    const state: DragState = {\n      initial: initial,\n      token,\n      delta: offset,\n    };\n    if (typeof listener.success !== `undefined`) {\n      listener.success(state);\n    }\n  };\n\n  // Drag is cancelled\n  const onDragCancel = (\n    //eslint-disable-next-line functional/prefer-immutable-types\n    event: PointerEvent | MouseEvent | undefined,\n    reason = `pointercancel`\n  ) => {\n    dragCleanup();\n    const state: DragState = {\n      token,\n      initial: initial,\n      delta: { x: -1, y: -1 },\n    };\n    if (typeof listener.abort !== `undefined`) {\n      listener.abort(reason, state);\n    }\n  };\n\n  elem.addEventListener(`pointerdown`, (event) => {\n    const selected = elem.classList.contains(`drag-sel`);\n    if (!selected) return;\n\n    initial = { x: event.x, y: event.y };\n    const s =\n      typeof listener.start === `undefined`\n        ? { allow: true, token }\n        : listener.start();\n    if (!s.allow) return;\n\n    token = s.token;\n\n    elem.classList.add(`drag-progress`);\n    elem.ownerDocument.addEventListener(`pointermove`, onPointerMove);\n    elem.ownerDocument.addEventListener(`pointerup`, onPointerUp);\n    elem.ownerDocument.addEventListener(`pointercancel`, onDragCancel);\n  });\n\n  return dispose;\n};\n","import { getErrorMessage } from '../debug/GetErrorMessage.js';\nimport { afterMatch } from '../Text.js';\nimport { log, type LogOpts } from './Log.js';\n\nexport type InlineConsoleOptions = LogOpts;\n\n/**\n * Adds an inline console to the page. A DIV is added to display log messages.\n * \n * Captures all console.log, console.warn and console.error calls, as well as unhandled exceptions.\n * \n * ```js\n * // Adds the DIV and intercepts console logs\n * inlineConsole();\n * \n * console.log(`Hello`); // message is displayed in the inline console\n * ```\n * @param opts \n */\nexport const inlineConsole = (opts: InlineConsoleOptions = {}) => {\n  const original = {\n    log: console.log,\n    error: console.error,\n    warn: console.warn\n  };\n\n  const logElement = document.createElement(`DIV`);\n  logElement.id = `ixfx-log`;\n  logElement.style.position = `fixed`;\n  logElement.style.left = `0px`;\n  logElement.style.top = `0px`;\n  logElement.style.pointerEvents = `none`;\n  logElement.style.display = `none`;\n\n  document.body.prepend(logElement);\n\n  const logger = log(logElement, opts);\n\n  const visibility = (show: boolean) => {\n    logElement.style.display = show ? `block` : `none`;\n  }\n\n  console.error = (message?: any, ...optionalParameters: Array<any>) => {\n    logger.error(message);\n    if (optionalParameters.length > 0) {\n      logger.error(optionalParameters);\n    }\n    original.error(message, ...optionalParameters);\n    visibility(true);\n  }\n\n  console.warn = (message?: any, ...optionalParameters: Array<any>) => {\n    logger.warn(message);\n    if (optionalParameters.length > 0) {\n      logger.warn(optionalParameters);\n    }\n    visibility(true);\n  }\n\n  console.log = (message?: any, ...optionalParameters: Array<any>) => {\n    logger.log(message);\n    if (optionalParameters.length > 0) {\n      logger.log(optionalParameters);\n    }\n    original.log(message, ...optionalParameters);\n    visibility(true);\n  }\n\n  //eslint-disable-next-line unicorn/prefer-add-event-listener\n  window.onerror = (event, source, lineno, _colno, error) => {\n    const abbreviatedSource = source === undefined ? `` : afterMatch(source, `/`, { fromEnd: true });\n    //const eventString = typeof event === `string` ? event : JSON.stringify(event).toString();\n    const eventString = getErrorMessage(error);\n    //const errorString = error === undefined ? `` : error.message;\n\n    logger.error(eventString + ` (${ abbreviatedSource }:${ lineno })`);\n    visibility(true);\n  }\n}"],"mappings":"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","names":["el","log","timestamp","clear","el","clear","JSON5","data","el","el2"]}