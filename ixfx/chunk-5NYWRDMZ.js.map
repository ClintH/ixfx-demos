{"version":3,"sources":["../src/random/index.ts","../src/random/FloatSource.ts","../src/visual/Colour.ts","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/lab.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/hsl.js","../node_modules/d3-interpolate/src/lab.js","../node_modules/d3-interpolate/src/hcl.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-interpolate/src/piecewise.js","../src/modulation/Easing.ts","../src/data/Wrap.ts","../src/data/Interpolate.ts","../src/random/Weighted.ts","../src/random/WeightedInteger.ts"],"sourcesContent":["import { shuffle } from '../collections/arrays/index.js';\nimport { numberTest as guardNumberTest, integerTest as guardIntegerTest, throwFromResult } from '../Guards.js';\n\nimport { range } from '../generators/IterableSync.js';\nimport { type RandomSource, defaultRandom, type RandomOptions } from './Types.js';\nimport { floatSource } from './FloatSource.js';\n\nexport { randomElement as arrayElement } from '../collections/arrays/index.js';\nexport { randomHue as hue } from '../visual/Colour.js';\n\nexport * from './FloatSource.js';\nexport * from './String.js';\nexport * from './Types.js';\nexport * from './Weighted.js';\nexport * from './WeightedIndex.js';\nexport * from './WeightedInteger.js';\n\n/**\n * Returns a random number with gaussian (ie. bell-curved) distribution\n * \n * @example Random number between 0..1 with gaussian distribution\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * Random.gaussian();\n * ```\n * \n * @example Distribution can be skewed\n * ```js\n * Random.gaussian(10);\n * ```\n * \n\n * @param skew Skew factor. Defaults to 1, no skewing. Above 1 will skew to left, below 1 will skew to right\n * @returns \n */\nexport const gaussian = (skew = 1) => gaussianSource(skew)();\n\n/**\n * Returns a function that generates a gaussian-distributed random number\n *  * @example Random number between 0..1 with gaussian distribution\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n *\n * // Create function\n * const r = Random.gaussianFn();\n *\n * // Generate random value\n * r();\n * ```\n *\n * @example Pass the random number generator elsewhere\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * import * as Arrays from 'https://unpkg.com/ixfx/dist/arrays.js';\n * const r = Random.gaussianFn(10);\n *\n * // Randomise array with gaussian distribution\n * Arrays.shuffle(r);\n * ```\n * @param skew\n * @returns\n */\nexport const gaussianSource = (skew = 1): RandomSource => {\n  const min = 0;\n  const max = 1;\n  // Source: https://stackoverflow.com/questions/25582882/javascript-math-random-normal-distribution-gaussian-bell-curve\n\n  const compute = (): number => {\n    const u = calculateNonZero();\n    const v = calculateNonZero();\n    //eslint-disable-next-line functional/no-let\n    let result = Math.sqrt(-2 * Math.log(u)) * Math.cos(2 * Math.PI * v);\n\n    result = result / 10 + 0.5; // Translate to 0 -> 1\n    if (result > 1 || result < 0) {\n      result = compute(); //;gaussian(skew); // resample between 0 and 1 if out of range\n    } else {\n      result = Math.pow(result, skew); // Skew\n      result *= max - min; // Stretch to fill range\n      result += min; // offset to min\n    }\n    return result;\n  };\n  return compute;\n};\n\nconst calculateNonZero = (source: RandomSource = defaultRandom) => {\n  let v = 0;\n  while (v === 0) {\n    //eslint-disable-next-line functional/no-expression-statements\n    v = source();\n  }\n  return v;\n}\n\n/**\n * Returns a function that produces a random integer between `max` (exclusive) and 0 (inclusive)\n * Use {@link integer} if you want a random number directly.\n *\n * Invoke directly:\n * ```js\n * integerSource(10)();  // Random number 0-9\n * ```\n *\n * Or keep a reference to re-compute:\n * ```js\n * const r = integerSource(10);\n * r(); // Produce a random integer\n * ```\n *\n * If a negative value is given, this is assumed to be the\n * minimum (inclusive), with 0 as the max (inclusive)\n * ```js\n * integerSource(-5)();  // Random number from -5 to 0\n * ```\n *\n * Specify options for a custom minimum or source of random:\n * ```js\n * integerSource({ max: 5,  min: 10 })();  // Random number 4-10\n * integerSource({ max: -5, min: -10 })(); // Random number from -10 to -6\n * integerSource({ max: 10, source: Math.random })(); // Random number between 0-9, with custom source of random\n * ```\n *\n * Throws an error if max & min are equal\n * @param maxOrOptions Max value (exclusive), or set of options\n * @returns Random integer\n */\nexport const integerSource = (maxOrOptions: number | RandomOptions): RandomSource => {\n  if (typeof maxOrOptions === `undefined`) {\n    throw new TypeError(`maxOrOptions is undefined`);\n  }\n  const options = typeof maxOrOptions === `number` ? { max: maxOrOptions } : maxOrOptions;\n  //eslint-disable-next-line functional/no-let\n  let max = Math.floor(options.max);\n  //eslint-disable-next-line functional/no-let\n  let min = Math.floor(options.min ?? 0);\n\n  // If we just get -5 as the max, invert so\n  // max:1 and min: -5 instead for -5...0 range\n  if (!options.min && max < 0) {\n    max = 1;\n    min = options.max;\n  }\n  const randomSource = options.source ?? defaultRandom;\n  if (min > max) {\n    throw new Error(`Min value is greater than max (min: ${ min } max: ${ max })`);\n  }\n\n  throwFromResult(guardNumberTest(min, ``, `min`));\n  throwFromResult(guardNumberTest(max, ``, `max`));\n\n  if (max === min) {\n    throw new Error(`Max and min values cannot be the same (${ max })`);\n  }\n\n  // Distance\n  const amt = Math.abs(max - min);\n  return () => Math.floor(randomSource() * amt) + min;\n};\n\n/**\n * Returns a random integer between `max` (exclusive) and 0 (inclusive)\n * Use {@link integerSource} to return a function instead.\n *\n * ```js\n * integer(10);  // Random number 0-9\n * ```\n *\n * If a negative value is given, this is assumed to be the\n * minimum (inclusive), with 0 as the max (inclusive)\n * ```js\n * integer(-5);  // Random number from -5 to 0\n * ```\n *\n * Specify options for a custom minimum or source of random:\n * ```js\n * integer({ max: 5,  min: 10 });  // Random number 4-10\n * integer({ max: -5, min: -10 }); // Random number from -10 to -6\n * integer({ max: 10, source: Math.random }); // Random number between 0-9, with custom source of random\n * ```\n *\n * Throws an error if max & min are equal\n * @param maxOrOptions Max value (exclusive), or set of options\n * @returns Random integer\n */\nexport const integer = (maxOrOptions: number | RandomOptions): number =>\n  integerSource(maxOrOptions)();\n\n\n\n/**\n * Returns a random float between `max` (exclusive) and 0 (inclusive). Max is 1 if unspecified.\n * Use {@link floatSource} to get a function that produces values. This is used internally.\n *\n * ```js\n * // Random number between 0..1 (but not including 1)\n * // (this would be identical to Math.random())\n * const v = float();\n * // Random float between 0..100 (but not including 100)\n * const v = float(100);\n * ```\n *\n * Options can be used:\n * ```js\n * // Random float between 20..40 (possibly including 20, but always lower than 40)\n * const v = float({ min: 20, max: 40 });\n * ```\n * @param maxOrOptions Maximum value (exclusive) or options\n * @returns Random number\n */\nexport const float = (maxOrOptions: number | RandomOptions = 1): number =>\n  floatSource(maxOrOptions)();\n\n/**\n * Generates a short roughly unique id\n * ```js\n * const id = shortGuid();\n * ```\n * @param opts Options.\n * @returns\n */\nexport const shortGuid = (options: Readonly<{ source?: RandomSource }> = {}) => {\n  const source = options.source ?? defaultRandom;\n  // Via Stackoverflow...\n  const firstPart = Math.trunc(source() * 46_656);\n  const secondPart = Math.trunc(source() * 46_656);\n  const firstPartString = `000${ firstPart.toString(36) }`.slice(-3);\n  const secondPartString = `000${ secondPart.toString(36) }`.slice(-3);\n  return firstPartString + secondPartString;\n};\n\n/**\n * Returns a random number of minutes, with a unit of milliseconds.\n * Max value is exclusive.\n * Use {@link minutesMs} to get a value directly, or {@link minutesMsSource} to return a function.\n *\n * @example Random value from 0 to one milli less than 5 * 60 * 1000\n * ```js\n * // Create function that returns value\n * const f = minutesMsSource(5);\n *\n * f(); // Generate value\n * ```\n *\n * @example Specified options:\n * ```js\n * // Random time between one minute and 5 minutes\n * const f = minutesMsSource({ max: 5, min: 1 });\n * f();\n * ```\n *\n * @remarks\n * It's a very minor function, but can make\n * code a little more literate:\n * ```js\n * // Random timeout of up to 5 mins\n * setTimeout(() => { ... }, minutesMsSource(5));\n * ```\n * @param maxMinutesOrOpts\n * @see {@link minutesMs}\n * @returns Function that produces a random value\n */\nexport const minutesMsSource = (\n  maxMinutesOrOptions: number | RandomOptions\n): RandomSource => {\n  const options =\n    typeof maxMinutesOrOptions === `number`\n      ? { max: maxMinutesOrOptions }\n      : maxMinutesOrOptions;\n  const min = (options.min ?? 0) * 60 * 1000;\n  const max = options.max * 60 * 1000;\n  return integerSource({ ...options, max, min });\n};\n\n/**\n * @example Random value from 0 to one milli less than 5 * 60 * 1000\n * ```js\n * // Random value from 0 to one milli less than 5*60*1000\n * minuteMs(5);\n * ```\n *\n * @example Specified options:\n * ```js\n * // Random time between one minute and 5 minutes\n * minuteMs({ max: 5, min: 1 });\n * ```\n * @inheritDoc minutesMsSource\n *\n * @param maxMinutesOrOpts\n * @see {@link minutesMsSource}\n * @returns Milliseconds\n */\nexport const minutesMs = (maxMinutesOrOptions: number | RandomOptions): number =>\n  minutesMsSource(maxMinutesOrOptions)();\n\n/**\n * Returns function which produces a random number of seconds, with a unit of milliseconds.\n * Maximum value is exclusive.\n * Use {@link secondsMs} to return a random value directly, or {@link secondsMsSource} to return a function.\n *\n * @example Random milliseconds between 0..4999\n * ```js\n * // Create function\n * const f = secondsMsSource(5000);\n * // Produce a value\n * const value = f();\n * ```\n *\n * @example Options can be provided\n * ```js\n * // Random milliseconds between 1000-4999\n * const value = secondsMsSource({ max:5, min:1 })();\n * // Note the extra () at the end to execute the function\n * ```\n *\n * @remarks\n * It's a very minor function, but can make\n * code a little more literate:\n * ```js\n * // Random timeout of up to 5 seconds\n * setTimeout(() => { ...}, secondsMsSource(5));\n * ```\n * @param maxSecondsOrOpts Maximum seconds, or options.\n * @returns Milliseconds\n */\nexport const secondsMsSource = (\n  maxSecondsOrOptions: number | RandomOptions\n): RandomSource => {\n  const options =\n    typeof maxSecondsOrOptions === `number`\n      ? { max: maxSecondsOrOptions }\n      : maxSecondsOrOptions;\n  const min = (options.min ?? 0) * 1000;\n  const max = options.max * 1000;\n  return () => integer({ ...options, max, min });\n};\n\n/**\n * @example Random milliseconds between 0..4999\n * ```js\n * secondsMs(5000);\n * ```\n *\n * @example Options can be provided\n * ```js\n * // Random milliseconds between 1000-4999\n * secondsMs({ max:5, min:1 });\n * ```\n * @inheritDoc secondsMsSource\n * @param maxSecondsOrOpts\n * @returns\n */\nexport const secondsMs = (maxSecondsOrOptions: number | RandomOptions): number =>\n  secondsMsSource(maxSecondsOrOptions)();\n\nexport type GenerateRandomOptions = RandomOptions & Readonly<{\n  /**\n   * If true, number range is looped\n   */\n  loop?: boolean;\n}>;\n\n/**\n * Returns a generator over random unique integers, up to\n * but not including the given max value.\n *\n * @example 0..9 range\n * ```js\n * const rand = [ ...integerUniqueGen(10) ];\n * // eg: [2, 9, 6, 0, 8, 7, 3, 4, 5, 1]\n * ```\n *\n * @example Options can be provided:\n * ```js\n * // 5..9 range\n * const rand = [ ...integerUniqueGen({ min: 5, max: 10 })];\n * ```\n *\n * Range can be looped. Once the initial random walk through the number\n * range completes, it starts again in a new random way.\n *\n * ```js\n * for (const r of integerUniqueGen({ max: 10, loop: true })) {\n *  // Warning: loops forever\n * }\n * ```\n *\n * Behind the scenes, an array of numbers is created that captures the range, this is then\n * shuffled on the first run, and again whenever the iterator loops, if that's allowed.\n *\n * As a consequence, large ranges will consume larger amounts of memory.\n * @param maxOrOptions\n * @returns\n */\nexport function* integerUniqueGen(\n  maxOrOptions: number | GenerateRandomOptions\n): IterableIterator<number> {\n  const options = typeof maxOrOptions === `number` ? { max: maxOrOptions } : maxOrOptions;\n  const min = options.min ?? 0;\n  const max = options.max;\n  const source = options.source ?? defaultRandom;\n  const loop = options.loop ?? false;\n\n  throwFromResult(guardIntegerTest(min, ``, `min`));\n  throwFromResult(guardIntegerTest(max, ``, `max`));\n  if (min > max) {\n    throw new Error(`Min value is greater than max. Min: ${ min } Max: ${ max }`);\n  }\n\n  const origRange = [ ...range(min, max - min) ];\n  //eslint-disable-next-line functional/no-let\n  let numberRange = shuffle(origRange);\n  //eslint-disable-next-line functional/no-let\n  let index = 0;\n  while (true) {\n    if (index === numberRange.length) {\n      if (loop) numberRange = shuffle(origRange, source);\n      else return;\n    }\n    yield numberRange[ index++ ];\n  }\n}\n\nexport { randomIndex as arrayIndex } from '../collections/arrays/index.js';","\nimport { type RandomOptions, type RandomSource, defaultRandom } from \"./Types.js\";\nimport { numberTest as guardNumberTest, throwFromResult } from '../Guards.js';\n/**\n * Returns a function that produces random float values.\n * Use {@link float} to produce a valued directly.\n *\n * Random float between `max` (exclusive) and 0 (inclusive). Max is 1 if unspecified.\n *\n *\n * ```js\n * // Random number between 0..1 (but not including 1)\n * // (this would be identical to Math.random())\n * const r = floatSource();\n * r(); // Execute to produce random value\n *\n * // Random float between 0..100 (but not including 100)\n * const v = floatSource(100)();\n * ```\n *\n * Options can be used:\n * ```js\n * // Random float between 20..40 (possibly including 20, but always lower than 40)\n * const r = floatSource({ min: 20, max: 40 });\n * ```\n * @param maxOrOptions Maximum value (exclusive) or options\n * @returns Random number\n */\nexport const floatSource = (maxOrOptions: number | RandomOptions = 1): RandomSource => {\n  const options = typeof maxOrOptions === `number` ? { max: maxOrOptions } : maxOrOptions;\n  //eslint-disable-next-line functional/no-let\n  let max = options.max;\n  //eslint-disable-next-line functional/no-let\n  let min = options.min ?? 0;\n  const source = options.source ?? defaultRandom;\n\n  throwFromResult(guardNumberTest(min, ``, `min`));\n  throwFromResult(guardNumberTest(max, ``, `max`));\n\n  if (!options.min && max < 0) {\n    min = max;\n    max = 0;\n  }\n  if (min > max) {\n    throw new Error(`Min is greater than max. Min: ${ min } max: ${ max }`);\n  }\n\n  return () => source() * (max - min) + min;\n};","import * as d3Colour from 'd3-color';\nimport * as d3Interpolate from 'd3-interpolate';\nimport { defaultRandom, type RandomSource } from '../random/Types.js';\nimport { throwNumberTest } from '../Guards.js';\n\nexport type Hsl = { h: number; s: number; l: number; opacity?: number };\nexport type Rgb = { r: number; g: number; b: number; opacity?: number };\nexport type Spaces = `hsl` | `rgb` | `lab` | `hcl` | `cubehelix`;\n/**\n * @private\n */\nexport type Colour = d3Colour.RGBColor | d3Colour.HSLColor;\n\n/**\n * A representation of colour. Eg: `blue`, `rgb(255,0,0)`, `hsl(20,100%,50%)`\n */\nexport type Colourish = string | d3Colour.ColorCommonInstance;\n\n/**\n * Options for interpolation\n */\nexport type InterpolationOpts = {\n  /**\n   * Gamma correction. Eg 4 brightens values. Only applies to rgb and cubehelix\n   * [Read more](https://github.com/d3/d3-interpolate#interpolate_gamma)\n   */\n  gamma?: number;\n  /**\n   * Colour space\n   */\n  space?: Spaces;\n  /**\n   * If true, interpolation happens the longer distance. Only applies to hsl, hcl and cubehelix\n   */\n  long?: boolean;\n};\n\n/**\n * Parses colour to `{ h, s, l }`. `opacity` field is added if it exists on source.\n * @param colour\n * @returns\n */\nexport const toHsl = (colour: Colourish): Hsl => {\n  const c = resolveColour(colour);\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  if (c === null) throw new Error(`Could not resolve colour ${ colour }`);\n\n  if (isHsl(c)) return c;\n  if (isRgb(c)) {\n    const asHsl = d3Colour.hsl(c);\n    if (c.opacity) return { ...asHsl, opacity: c.opacity };\n    return asHsl;\n  }\n  // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n  throw new Error(`Could not resolve colour ${ colour }`);\n};\n\n/**\n * Returns a full HSL colour string (eg `hsl(20,50%,75%)`) based on a index.\n * It's useful for generating perceptually different shades as the index increments.\n *\n * ```\n * el.style.backgroundColor = goldenAgeColour(10);\n * ```\n *\n * Saturation and lightness can be specified, as numeric ranges of 0-1.\n *\n * @param saturation Saturation (0-1), defaults to 0.5\n * @param lightness Lightness (0-1), defaults to 0.75\n * @param alpha Opacity (0-1), defaults to 1.0\n * @returns HSL colour string eg `hsl(20,50%,75%)`\n */\nexport const goldenAngleColour = (\n  index: number,\n  saturation = 0.5,\n  lightness = 0.75,\n  alpha = 1\n) => {\n  throwNumberTest(index, `positive`, `index`);\n  throwNumberTest(saturation, `percentage`, `saturation`);\n  throwNumberTest(lightness, `percentage`, `lightness`);\n  throwNumberTest(alpha, `percentage`, `alpha`);\n\n  // Via Stackoverflow\n  const hue = index * 137.508; // use golden angle approximation\n  return alpha === 1 ? `hsl(${ hue },${ saturation * 100 }%,${ lightness * 100 }%)` : `hsl(${ hue },${ saturation * 100 }%,${ lightness * 100 }%,${ alpha * 100 }%)`;\n};\n\n/**\n * Returns a random hue component\n * ```\n * // Generate hue\n * const h =randomHue(); // 0-359\n *\n * // Generate hue and assign as part of a HSL string\n * el.style.backgroundColor = `hsl(${randomHue(), 50%, 75%})`;\n * ```\n * @param rand\n * @returns\n */\nexport const randomHue = (rand: RandomSource = defaultRandom): number => {\n  const r = rand();\n  return r * 360;\n};\n\n/**\n * Parses colour to `{ r, g, b }`. `opacity` field is added if it exists on source.\n * [Named colours](https://html-color-codes.info/color-names/)\n * @param colour\n * @returns\n */\nexport const toRgb = (colour: Colourish): Rgb => {\n  const c = resolveColour(colour);\n  const rgb = c.rgb();\n  return c.opacity < 1 ? { r: rgb.r, g: rgb.g, b: rgb.b, opacity: c.opacity } : { r: rgb.r, g: rgb.g, b: rgb.b };\n};\n\nconst resolveColour = (c: Colourish): Colour => {\n  if (typeof c === `string`) {\n    const css = d3Colour.color(c);\n    if (css !== null) return css;\n    const error = c.startsWith(`hsl`) && c.indexOf(`%`) <= 0 ? new Error(`Could not resolve CSS colour ${ c }. HSL values should be in the form: hsl(0, 50%, 50%)`) : new Error(`Could not resolve CSS colour ${ c }`);\n    throw error;\n  } else {\n    if (isHsl(c)) return d3Colour.hsl(c.h, c.s, c.l);\n    if (isRgb(c)) return d3Colour.rgb(c.r, c.g, c.b);\n  }\n  throw new Error(`Could not resolve colour ${ JSON.stringify(c) }`);\n};\n\n/**\n * Returns a colour in hex format `#000000`\n * @param colour\n * @returns Hex format, including #\n */\nexport const toHex = (colour: Colourish): string => {\n  const c = resolveColour(colour);\n  return c.formatHex();\n};\n\n/**\n * Returns a variation of colour with its opacity multiplied by `amt`.\n *\n * ```js\n * // Return a colour string for blue that is 50% opaque\n * opacity(`blue`, 0.5);\n * // eg: `rgba(0,0,255,0.5)`\n *\n * // Returns a colour string that is 50% more opaque\n * opacity(`hsla(200,100%,50%,50%`, 0.5);\n * // eg: `hsla(200,100%,50%,25%)`\n * ```\n *\n * [Named colours](https://html-color-codes.info/color-names/)\n * @param colour A valid CSS colour\n * @param amt Amount to multiply opacity by\n * @returns String representation of colour\n */\nexport const opacity = (colour: Colourish, amt: number): string => {\n  const c = resolveColour(colour);\n  c.opacity *= amt;\n  return c.toString();\n};\n\n/**\n * Gets a CSS variable.\n * ```\n * // Fetch --accent variable, or use `yellow` if not found.\n * getCssVariable(`accent`, `yellow`);\n * ```\n * @param name Name of variable. Omit the `--`\n * @param fallbackColour Fallback colour if not found\n * @param root  Element to search variable from\n * @returns Colour or fallback.\n */\nexport const getCssVariable = (\n  name: string,\n  fallbackColour = `black`,\n  root?: HTMLElement\n): string => {\n  if (root === undefined) root = document.body;\n  const fromCss = getComputedStyle(root).getPropertyValue(`--${ name }`).trim();\n  if (fromCss === undefined || fromCss.length === 0) return fallbackColour;\n  return fromCss;\n};\n\n/**\n * Interpolates between two colours, returning a string in the form `rgb(r,g,b)`\n *\n * @example\n * ```js\n * // Get 50% between blue and red\n * interpolate(0.5, `blue`, `red`);\n *\n * // Get midway point, with specified colour space\n * interpolate(0.5, `hsl(200, 100%, 50%)`, `pink`, {space: `hcl`});\n * ```\n *\n * [Named colours](https://html-color-codes.info/color-names/)\n * @param amount Amount (0 = from, 0.5 halfway, 1= to)\n * @param from Starting colour\n * @param to Final colour\n * @param optsOrSpace Options for interpolation, or string name for colour space, eg `hsl`.\n * @returns String representation of colour, eg. `rgb(r,g,b)`\n */\nexport const interpolate = (\n  amount: number,\n  from: Colourish,\n  to: Colourish,\n  optsOrSpace?: string | InterpolationOpts\n): string => {\n  throwNumberTest(amount, `percentage`, `amount`);\n  if (typeof from !== `string`)\n    throw new Error(`Expected string for 'from' param`);\n  if (typeof to !== `string`) throw new Error(`Expected string for 'to' param`);\n\n  let opts: InterpolationOpts;\n  if (typeof optsOrSpace === `undefined`) opts = {};\n  else if (typeof optsOrSpace === `string`)\n    opts = { space: optsOrSpace as Spaces };\n  else opts = optsOrSpace;\n\n  const inter = getInterpolator(opts, [ from, to ]);\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\n  return inter(amount);\n};\n\nconst getInterpolator = (\n  optsOrSpace: InterpolationOpts | string,\n  colours: Array<Colourish>\n): ((t: number) => string) | undefined => {\n  if (!Array.isArray(colours))\n    throw new Error(`Expected one or more colours as parameters`);\n\n  let opts: InterpolationOpts;\n  if (typeof optsOrSpace === `undefined`) opts = {};\n  else if (typeof optsOrSpace === `string`)\n    opts = { space: optsOrSpace as Spaces };\n  else opts = optsOrSpace;\n\n  if (!Array.isArray(colours))\n    throw new Error(`Expected array for colours parameter`);\n  if (colours.length < 2)\n    throw new Error(`Interpolation expects at least two colours`);\n  const { space = `rgb`, long = false } = opts;\n  let inter;\n\n  switch (space) {\n    case `lab`: {\n      inter = d3Interpolate.interpolateLab;\n      break;\n    }\n    case `hsl`: {\n      inter = long\n        ? d3Interpolate.interpolateHslLong\n        : d3Interpolate.interpolateHsl;\n      break;\n    }\n    case `hcl`: {\n      inter = long\n        ? d3Interpolate.interpolateHclLong\n        : d3Interpolate.interpolateHcl;\n      break;\n    }\n    case `cubehelix`: {\n      inter = long\n        ? d3Interpolate.interpolateCubehelixLong\n        : d3Interpolate.interpolateCubehelix;\n      break;\n    }\n    case `rgb`: {\n      inter = d3Interpolate.interpolateRgb;\n    }\n    default: {\n      inter = d3Interpolate.interpolateRgb;\n    }\n  }\n\n  if (opts.gamma && (space === `rgb` || space === `cubehelix`)) {\n    inter = (inter as d3Interpolate.ColorGammaInterpolationFactory).gamma(\n      opts.gamma\n    );\n  }\n\n  return colours.length > 2 ? d3Interpolate.piecewise(inter, colours) : inter(colours[ 0 ], colours[ 1 ]);\n};\n\n/**\n * Produces a scale of colours as a string array\n *\n * @example\n * ```js\n * // Yields array of 5 colour strings\n * const s = scale(5, {space:`hcl`}, `blue`, `red`);\n * // Produces scale between three colours\n * const s = scale(5, {space:`hcl`}, `blue`, `yellow`, `red`);\n * ```\n * @param steps Number of colours\n * @param opts Options for interpolation, or string colour space eg `hsl`\n * @param colours From/end colours (or more)\n * @returns\n */\nexport const scale = (\n  steps: number,\n  opts: InterpolationOpts | string,\n  ...colours: Array<Colourish>\n): Array<string> => {\n  throwNumberTest(steps, `aboveZero`, `steps`);\n  if (!Array.isArray(colours))\n    throw new Error(`Expected one or more colours as parameters`);\n  const inter = getInterpolator(opts, colours);\n  if (inter === undefined) throw new Error(`Could not handle colour/space`);\n\n  const perStep = 1 / (steps - 1);\n  const r = [];\n  //eslint-disable-next-line functional/no-let\n  let amt = 0;\n  //eslint-disable-next-line functional/no-let\n  for (let index = 0; index < steps; index++) {\n    //eslint-disable-next-line functional/immutable-data\n    r.push(inter(amt));\n    amt += perStep;\n    if (amt > 1) amt = 1;\n  }\n  return r;\n};\n\nconst isHsl = (p: Colour | d3Colour.ColorCommonInstance | Hsl): p is Hsl => {\n  if ((p as Hsl).h === undefined) return false;\n  if ((p as Hsl).s === undefined) return false;\n  if ((p as Hsl).l === undefined) return false;\n  return true;\n};\n\nconst isRgb = (p: Colour | d3Colour.ColorCommonInstance | Rgb): p is Rgb => {\n  if ((p as Rgb).r === undefined) return false;\n  if ((p as Rgb).g === undefined) return false;\n  if ((p as Rgb).b === undefined) return false;\n  return true;\n};\n\n// const rgbToHsl = (r: number, g: number, b: number): Hsl => {\n//   r /= 255;\n//   g /= 255;\n//   b /= 255;\n\n//   var min = Math.min(r, g, b),\n//     max = Math.max(r, g, b),\n//     delta = max - min,\n//     h,\n//     s,\n//     l;\n\n//   h = 0;\n//   if (max === min) {\n//     h = 0;\n//   } else if (r === max) {\n//     h = (g - b) / delta;\n//   } else if (g === max) {\n//     h = 2 + (b - r) / delta;\n//   } else if (b === max) {\n//     h = 4 + (r - g) / delta;\n//   }\n\n//   h = Math.min(h * 60, 360);\n\n//   if (h < 0) {\n//     h += 360;\n//   }\n\n//   l = (min + max) / 2;\n\n//   if (max === min) {\n//     s = 0;\n//   } else if (l <= 0.5) {\n//     s = delta / (max + min);\n//   } else {\n//     s = delta / (2 - max - min);\n//   }\n\n//   return {h, s, l};\n// };\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(`^rgb\\\\(${reI},${reI},${reI}\\\\)$`),\n    reRgbPercent = new RegExp(`^rgb\\\\(${reP},${reP},${reP}\\\\)$`),\n    reRgbaInteger = new RegExp(`^rgba\\\\(${reI},${reI},${reI},${reN}\\\\)$`),\n    reRgbaPercent = new RegExp(`^rgba\\\\(${reP},${reP},${reP},${reN}\\\\)$`),\n    reHslPercent = new RegExp(`^hsl\\\\(${reN},${reP},${reP}\\\\)$`),\n    reHslaPercent = new RegExp(`^hsla\\\\(${reN},${reP},${reP},${reN}\\\\)$`);\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHex8: color_formatHex8,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHex8() {\n  return this.rgb().formatHex8();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb() {\n    return this;\n  },\n  clamp() {\n    return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));\n  },\n  displayable() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatHex8: rgb_formatHex8,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;\n}\n\nfunction rgb_formatHex8() {\n  return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;\n}\n\nfunction rgb_formatRgb() {\n  const a = clampa(this.opacity);\n  return `${a === 1 ? \"rgb(\" : \"rgba(\"}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? \")\" : `, ${a})`}`;\n}\n\nfunction clampa(opacity) {\n  return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));\n}\n\nfunction clampi(value) {\n  return Math.max(0, Math.min(255, Math.round(value) || 0));\n}\n\nfunction hex(value) {\n  value = clampi(value);\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  clamp() {\n    return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));\n  },\n  displayable() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl() {\n    const a = clampa(this.opacity);\n    return `${a === 1 ? \"hsl(\" : \"hsla(\"}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? \")\" : `, ${a})`}`;\n  }\n}));\n\nfunction clamph(value) {\n  value = (value || 0) % 360;\n  return value < 0 ? value + 360 : value;\n}\n\nfunction clampt(value) {\n  return Math.max(0, Math.min(1, value || 0));\n}\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * degrees - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * radians,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis.js\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color.js\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color.js\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","import {default as value} from \"./value.js\";\n\nexport default function piecewise(interpolate, values) {\n  if (values === undefined) values = interpolate, interpolate = value;\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","// Easings from https://easings.net/\nimport { msElapsedTimer, relativeTimer, ticksElapsedTimer, type TimerSource } from '../flow/Timer.js';\nimport { interpolate } from '../data/Interpolate.js';\nimport type { HasCompletion } from '../flow/Types.js';\n\n\nconst sqrt = Math.sqrt;\nconst pow = Math.pow;\nconst cos = Math.cos;\n//eslint-disable-next-line @typescript-eslint/naming-convention\nconst pi = Math.PI;\nconst sin = Math.sin;\n/*\ntype RelativeTimer = {\n  reset(): void\n  elapsed(): number\n  isDone(): boolean\n}\n\ntype TimerSource = (upperBound: number) => RelativeTimer;\n\nconst msRelativeTimer = function (upperBound: number): RelativeTimer {\n  let start = performance.now();\n  return {\n    reset: () => {\n      start = performance.now();\n    },\n    elapsed: () => clamp((performance.now() - start) / upperBound),\n    isDone: () => (performance.now() - start) >= upperBound,\n  };\n};\n\nconst tickRelativeTimer = function (upperBound: number): RelativeTimer {\n  let start = 0;\n  return {\n    reset: () => {\n      start = 0;\n    },\n    elapsed: () => clamp(start++ / upperBound),\n    isDone: () => start >= upperBound,\n  };\n};\n*/\n\nexport type EasingFn = (x: number) => number;\n\n/**\n * Creates an easing based on clock time. Time\n * starts being counted when easing function is created.\n * @example Time based easing\n * ```\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const t = Easings.time(`quintIn`, 5*1000); // Will take 5 seconds to complete\n * ...\n * t.compute(); // Get current value of easing\n * t.reset();   // Reset to 0\n * t.isDone;    // _True_ if finished\n * ```\n * @param nameOrFunction Name of easing, or an easing function\n * @param durationMs Duration in milliseconds\n * @returns Easing\n */\nexport const time = function (\n  nameOrFunction: EasingName | EasingFn,\n  durationMs: number\n): Easing {\n  return create(nameOrFunction, durationMs, msElapsedTimer);\n};\n\n/**\n * Creates an easing based on ticks\n *\n * @example Tick-based easing\n * ```\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const t = Easings.tick(`sineIn`, 1000);   // Will take 1000 ticks to complete\n * t.compute(); // Each call to `compute` progresses the tick count\n * t.reset();   // Reset to 0\n * t.isDone;    // _True_ if finished\n * ```\n * @param nameOrFn Name of easing, or an easing function\n * @param durationTicks Duration in ticks\n * @returns Easing\n */\nexport const tick = function (\n  nameOrFunction: EasingName | EasingFn,\n  durationTicks: number\n): Easing {\n  return create(nameOrFunction, durationTicks, ticksElapsedTimer);\n};\n\n/**\n * 'Ease' from `0` to `1` over a delicious curve. Commonly used for animation\n * and basic modelling of phyical motion.\n *\n * Create via {@link tick} or {@link time}, call `compute` to calculate the next\n * value in the progression, until you reach `1` or `isDone` returns true.\n *\n */\nexport type Easing = HasCompletion & {\n  /**\n   * Computes the current value of the easing\n   *\n   * @returns {number}\n   */\n  compute(): number;\n\n  /**\n   * Reset the easing\n   */\n  reset(): void;\n  /**\n   * Returns true if the easing is complete\n   *\n   * @returns {boolean}\n   */\n  get isDone(): boolean;\n};\n\n/**\n * Creates a new easing by name\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const e = Easings.create(`circInOut`, 1000, msElapsedTimer);\n * ```\n * @param nameOrFn Name of easing, or an easing function\n * @param duration Duration (meaning depends on timer source)\n * @param timerSource Timer source. Eg {@link tickRelativeTimer}, {@link msRelativeTimer}\n * @returns\n */\nconst create = function (\n  nameOrFunction: EasingName | EasingFn,\n  duration: number,\n  timerSource: TimerSource\n): Easing {\n  const fn = typeof nameOrFunction === `function` ? nameOrFunction : get(nameOrFunction);\n  if (fn === undefined) {\n    const error = typeof nameOrFunction === `string` ? new Error(`Easing function not found: ${ nameOrFunction }`) : new Error(`Easing function not found`);\n    throw error;\n  }\n\n  // Get a relative version of timer\n  const timer = relativeTimer(duration, {\n    timer: timerSource(),\n    clampValue: true,\n  });\n  let startCount = 1;\n\n  return {\n    get isDone() {\n      return timer.isDone;\n    },\n    get runState() {\n      if (timer.isDone) return `idle`;\n      return `scheduled`;\n    },\n    /**\n     * Returns 1 if it has been created, returns +1 for each additional time the timer has been reset.\n     */\n    get startCount() {\n      return startCount;\n    },\n    compute: () => {\n      const relative = timer.elapsed;\n      return fn(relative);\n    },\n    reset: () => {\n      timer.reset();\n      startCount++;\n    },\n  };\n};\n\n/**\n * Creates an easing function using a simple cubic bezier defined by two points.\n *\n * Eg: https://cubic-bezier.com/#0,1.33,1,-1.25\n *  a:0, b: 1.33, c: 1, d: -1.25\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * // Time-based easing using bezier\n * const e = Easings.time(fromCubicBezier(1.33, -1.25), 1000);\n * e.compute();\n * ```\n * @param b\n * @param d\n * @param t\n * @returns Value\n */\nexport const fromCubicBezier =\n  (b: number, d: number): EasingFn =>\n    (t: number) => {\n      const s = 1 - t;\n      const s2 = s * s;\n      const t2 = t * t;\n      const t3 = t2 * t;\n      return 3 * b * s2 * t + 3 * d * s * t2 + t3;\n    };\n\n/**\n * Returns a mix of two easing functions.\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * // Get a 50/50 mix of two easing functions at t=0.25\n * Easings.mix(0.5, 0.25, Easings.functions.sineIn, Easings.functions.sineOut);\n *\n * // 10% of sineIn, 90% of sineOut\n * Easings.mix(0.90, 0.25, Easings.functions.sineIn, Easings.functions.sineOut);\n * ```\n * @param amt 'Progress' value passed to the easing functions\n * @param balance Mix between a and b\n * @param easingA\n * @param easingB\n * @returns Numeric value\n */\nexport const mix = (\n  amt: number,\n  balance: number,\n  easingA: EasingFn,\n  easingB: EasingFn\n) => interpolate(balance, easingA(amt), easingB(amt));\n\n/**\n * Returns a 'crossfade' of two easing functions, synchronised with the progress through the easing. That is:\n * * 0.0 will yield 100% of easingA at its `easing(0)` value.\n * * 0.2 will yield 80% of a, 20% of b, with both at their `easing(0.2)` values\n * * 0.5 will yield 50% of both functions both at their `easing(0.5)` values\n * * 0.8 will yield 20% of a, 80% of a, with both at their `easing(0.8)` values\n * * 1.0 will yield 100% of easingB at its `easing(1)` value.\n *\n * So easingB will only ever kick in at higher `amt` values and `easingA` will only be present in lower valus.\n *\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * Easings.crossFade(0.5, Easings.functions.sineIn, Easings.functions.sineOut);\n * ```\n * @param amt\n * @param easingA\n * @param easingB\n * @returns Numeric value\n */\nexport const crossfade = (amt: number, easingA: EasingFn, easingB: EasingFn) =>\n  mix(amt, amt, easingA, easingB);\n\n/**\n * Easing name\n */\nexport type EasingName = keyof typeof functions;\n\n/**\n * Returns an easing function by name, or _undefined_ if not found.\n * This is a manual way of working with easing functions. If you want to\n * ease over time or ticks, use `Flow.Timer.msElapsedTimer` or `Flow.Timer.ticksElapsedTimer`.\n *\n * ```js\n * const fn = Easings.get(`sineIn`);\n * // Returns 'eased' transformation of 0.5\n * fn(0.5);\n * ```\n *\n * This function is useful if trying to resolve an easing by string. If you\n * know in advance what easing to use, you could also access it via\n * `Easings.functions.NAME`, eg `Easings.functions.sineIn`.\n * @param easingName eg `sineIn`\n * @returns Easing function\n */\nexport const get = function (easingName: EasingName): EasingFn | undefined {\n  if (easingName === null) throw new Error(`easingName is null`);\n  if (easingName === undefined) throw new Error(`easingName is undefined`);\n  const name = easingName.toLocaleLowerCase();\n  const found = Object.entries(functions).find(\n    ([ k, _v ]) => k.toLocaleLowerCase() === name\n  );\n\n  if (found === undefined) return found;\n  return found[ 1 ];\n};\n\n/**\n * Iterate over available easings.\n * @private\n * @returns Returns list of available easing names\n */\nexport function* getEasings(): Iterable<string> {\n  yield* Object.keys(functions);\n};\n\n/**\n * Returns a roughly gaussian easing function\n * ```js\n * import { Easings } from \"https://unpkg.com/ixfx/dist/modulation.js\";\n * const fn = Easings.gaussian();\n * ```\n *\n * Try different positive and negative values for `stdDev` to pinch\n * or flatten the bell shape.\n * @param standardDeviation\n * @returns\n */\nexport const gaussian = (standardDeviation = 0.4): EasingFn => {\n  const a = 1 / sqrt(2 * pi);\n  const mean = 0.5;\n\n  return (t: number) => {\n    const f = a / standardDeviation;\n    // p:-8 pinched\n    //eslint-disable-next-line functional/no-let\n    let p = -2.5; // -1/1.25;\n    //eslint-disable-next-line functional/no-let\n    let c = (t - mean) / standardDeviation;\n    c *= c;\n    p *= c;\n    const v = f * pow(Math.E, p); // * (2/pi);//0.62;\n    if (v > 1) return 1;\n    if (v < 0) return 0;\n\n    //if (v >1) console.log(v);\n    //if (v < 0) console.log(v);\n    return v;\n  };\n};\n\nconst bounceOut = function (x: number): number {\n  const n1 = 7.5625;\n  const d1 = 2.75;\n\n  if (x < 1 / d1) {\n    return n1 * x * x;\n  } else if (x < 2 / d1) {\n    return n1 * (x -= 1.5 / d1) * x + 0.75;\n  } else if (x < 2.5 / d1) {\n    return n1 * (x -= 2.25 / d1) * x + 0.9375;\n  } else {\n    return n1 * (x -= 2.625 / d1) * x + 0.984_375;\n  }\n};\n\nconst quintIn = (x: number): number => x * x * x * x * x;\nconst quintOut = (x: number): number => 1 - pow(1 - x, 5);\nconst arch = (x: number): number => x * (1 - x) * 4;\n\n/**\n * Weighted average\n * \n * `slowDownFactor` \n * @param currentValue \n * @param targetValue \n * @param slowDownFactor \n * @returns \n */\nexport const weightedAverage = (currentValue: number, targetValue: number, slowDownFactor: number) => {\n  return ((currentValue * (slowDownFactor - 1)) + targetValue) / slowDownFactor\n}\n\nexport const functions = {\n  smoothstep: (x: number): number => x * x * (3 - 2 * x),\n  smootherstep: (x: number): number => (x * (x * 6 - 15) + 10) * x * x * x,\n  arch,\n  bell: gaussian(),\n  sineIn: (x: number): number => 1 - cos((x * pi) / 2),\n  sineOut: (x: number): number => sin((x * pi) / 2),\n  quadIn: (x: number): number => x * x,\n  quadOut: (x: number): number => 1 - (1 - x) * (1 - x),\n  sineInOut: (x: number): number => -(cos(pi * x) - 1) / 2,\n  quadInOut: (x: number): number =>\n    x < 0.5 ? 2 * x * x : 1 - pow(-2 * x + 2, 2) / 2,\n  cubicIn: (x: number): number => x * x * x,\n  cubicOut: (x: number): number => 1 - pow(1 - x, 3),\n  quartIn: (x: number): number => x * x * x * x,\n  quartOut: (x: number): number => 1 - pow(1 - x, 4),\n  quintIn,\n  quintOut, //: (x: number): number => 1 - pow(1 - x, 5),\n  expoIn: (x: number): number => (x === 0 ? 0 : pow(2, 10 * x - 10)),\n  expoOut: (x: number): number => (x === 1 ? 1 : 1 - pow(2, -10 * x)),\n  quintInOut: (x: number): number =>\n    x < 0.5 ? 16 * x * x * x * x * x : 1 - pow(-2 * x + 2, 5) / 2,\n  expoInOut: (x: number): number =>\n    x === 0\n      ? 0\n      : x === 1\n        ? 1\n        // eslint-disable-next-line unicorn/no-nested-ternary\n        : x < 0.5\n          ? pow(2, 20 * x - 10) / 2\n          : (2 - pow(2, -20 * x + 10)) / 2,\n  circIn: (x: number): number => 1 - sqrt(1 - pow(x, 2)),\n  circOut: (x: number): number => sqrt(1 - pow(x - 1, 2)),\n  backIn: (x: number): number => {\n    const c1 = 1.701_58;\n    const c3 = c1 + 1;\n\n    return c3 * x * x * x - c1 * x * x;\n  },\n  backOut: (x: number): number => {\n    const c1 = 1.701_58;\n    const c3 = c1 + 1;\n\n    return 1 + c3 * pow(x - 1, 3) + c1 * pow(x - 1, 2);\n  },\n  circInOut: (x: number): number =>\n    x < 0.5\n      ? (1 - sqrt(1 - pow(2 * x, 2))) / 2\n      : (sqrt(1 - pow(-2 * x + 2, 2)) + 1) / 2,\n  backInOut: (x: number): number => {\n    const c1 = 1.701_58;\n    const c2 = c1 * 1.525;\n\n    return x < 0.5\n      ? (pow(2 * x, 2) * ((c2 + 1) * 2 * x - c2)) / 2\n      : (pow(2 * x - 2, 2) * ((c2 + 1) * (x * 2 - 2) + c2) + 2) / 2;\n  },\n  elasticIn: (x: number): number => {\n    const c4 = (2 * pi) / 3;\n\n    return x === 0\n      ? 0\n      : (x === 1\n        ? 1\n        : -pow(2, 10 * x - 10) * sin((x * 10 - 10.75) * c4));\n  },\n  elasticOut: (x: number): number => {\n    const c4 = (2 * pi) / 3;\n\n    return x === 0\n      ? 0\n      : (x === 1\n        ? 1\n        : pow(2, -10 * x) * sin((x * 10 - 0.75) * c4) + 1);\n  },\n  bounceIn: (x: number): number => 1 - bounceOut(1 - x),\n  bounceOut: bounceOut,\n  elasticInOut: (x: number): number => {\n    const c5 = (2 * pi) / 4.5;\n\n    return x === 0\n      ? 0\n      : x === 1\n        ? 1\n        // eslint-disable-next-line unicorn/no-nested-ternary\n        : x < 0.5\n          ? -(pow(2, 20 * x - 10) * sin((20 * x - 11.125) * c5)) / 2\n          : (pow(2, -20 * x + 10) * sin((20 * x - 11.125) * c5)) / 2 + 1;\n  },\n  bounceInOut: (x: number): number =>\n    x < 0.5 ? (1 - bounceOut(1 - 2 * x)) / 2 : (1 + bounceOut(2 * x - 1)) / 2,\n};\n","import { throwNumberTest, throwIntegerTest } from '../Guards.js';\n\n/**\n * Wraps an integer number within a specified range, defaulting to degrees (0-360). Use {@link wrap} for floating-point wrapping.\n *\n * This is useful for calculations involving degree angles and hue, which wrap from 0-360.\n * Eg: to add 200 to 200, we don't want 400, but 40.\n *\n * ```js\n * const v = wrapInteger(200+200, 0, 360); // 40\n * ```\n *\n * Or if we minus 100 from 10, we don't want -90 but 270\n * ```js\n * const v = wrapInteger(10-100, 0, 360); // 270\n * ```\n *\n * `wrapInteger` uses 0-360 as a default range, so both of these\n * examples could just as well be:\n *\n * ```js\n * wrapInteger(200+200);  // 40\n * wrapInteger(10-100);  // 270\n * ```\n *\n * Non-zero starting points can be used. A range of 20-70:\n * ```js\n * const v = wrapInteger(-20, 20, 70); // 50\n * ```\n *\n * Note that the minimum value is inclusive, while the maximum is _exclusive_.\n * So with the default range of 0-360, 360 is never reached:\n *\n * ```js\n * wrapInteger(360); // 0\n * wrapInteger(361); // 1\n * ```\n *\n * If you just want to lock values to a range without wrapping, consider {@link clamp}.\n *\n * @param v Value to wrap\n * @param min Integer minimum of range (default: 0). Inclusive\n * @param max Integer maximum of range (default: 360). Exlusive\n * @returns\n */\nexport const wrapInteger = (v: number, min = 0, max = 360) => {\n  throwIntegerTest(v, undefined, `v`);\n  throwIntegerTest(min, undefined, `min`);\n  throwIntegerTest(max, undefined, `max`);\n\n  if (v === min) return min;\n  if (v === max) return min; // Wraps\n  if (v > 0 && v < min) v += min;\n\n  v -= min;\n  max -= min;\n  v = v % max;\n\n  if (v < 0) v = max - Math.abs(v) + min;\n  return v + min;\n};\n\n/**\n * Wraps floating point numbers to be within a range (default: 0..1). Use {@link wrapInteger} if you want to wrap integer values.\n *\n * This logic makes sense for some things like rotation angle.\n *\n * If you just want to lock values to a range without wrapping, consider {@link clamp}.\n *\n * ```js\n * wrap(1.2);   // 0.2\n * wrap(2);     // 1.0\n * wrap(-0.2); // 0.8\n * ```\n *\n * A range can be provided too:\n * ```js\n * wrap(30, 20, 50);  \t // 30\n * wrap(60, 20, 50);    //  30\n * ```\n * @param v\n * @param min\n * @param max\n * @returns\n */\nexport const wrap = (v: number, min = 0, max = 1) => {\n  throwNumberTest(v, ``, `min`);\n  throwNumberTest(min, ``, `min`);\n  throwNumberTest(max, ``, `max`);\n\n  if (v === min) return min;\n  if (v === max) return min; // Wraps\n\n  while (v <= min || v >= max) {\n    if (v === max) break;\n    if (v === min) break;\n    if (v > max) {\n      v = min + (v - max);\n    } else if (v < min) {\n      v = max - (min - v);\n    }\n  }\n  return v;\n};\n\n/**\n * Performs a calculation within a wrapping number range. This is a lower-level function.\n * See also: {@link wrapInteger} for simple wrapping within a range.\n *\n * `min` and `max` define the start and end of the valid range, inclusive. Eg for hue degrees it'd be 0, 360.\n * `a` and `b` is the range you want to work in.\n *\n * For example, let's say you want to get the middle point between a hue of 30 and a hue of 330 (ie warmer colours):\n * ```js\n * wrapRange(0,360, (distance) => {\n *  // for a:0 and b:330, distance would be 90 from 30 degrees to 330 (via zero)\n *  return distance * 0.5; // eg return middle point\n * }, 30, 330);\n * ```\n *\n * The return value of the callback should be in the range of 0-distance. `wrapRange` will subsequently\n * conform it to the `min` and `max` range before it's returned to the caller.\n *\n * @param a Output start (eg. 60)\n * @param b Output end (eg 300)\n * @param min Range start (eg 0)\n * @param max Range end (eg 360)\n * @param fn Returns a computed value from 0 to `distance`.\n * @returns\n */\nexport const wrapRange = (\n  min: number,\n  max: number,\n  fn: (distance: number) => number,\n  a: number,\n  b: number\n) => {\n  //eslint-disable-next-line functional/no-let\n  let r = 0;\n  // No wrapping\n  const distF = Math.abs(b - a);\n  // When b is wrapped forwards\n  const distFwrap = Math.abs(max - a + b);\n  // When b is wrapped backwards (10, 300)\n  const distBWrap = Math.abs(a + (360 - b));\n\n  const distMin = Math.min(distF, distFwrap, distBWrap);\n  if (distMin === distBWrap) {\n    // (10, 300) = 70\n    r = a - fn(distMin);\n  } else if (distMin === distFwrap) {\n    // (300, 60) = 120\n    r = a + fn(distMin);\n  } else {\n    // Forwards or backwards without wrapping\n    if (a > b) {\n      // (240,120) -- backwards\n      r = a - fn(distMin);\n    } else {\n      // (120,240) -- forwards\n      r = a + fn(distMin);\n    }\n  }\n  return wrapInteger(r, min, max);\n};\n","import { wrap } from './Wrap.js';\nexport const piPi = Math.PI * 2;\n\n/**\n * Interpolates between `a` and `b` by `amount`. Aka `lerp`.\n *\n * [ixfx Guide](https://clinth.github.io/ixfx-docs/modulation/interpolate/)\n *\n * @example Get the halfway point between 30 and 60\n * ```js\n * import {interpolate} from 'https://unpkg.com/ixfx/dist/data.js';\n * interpolate(0.5, 30, 60);\n * ```\n *\n * Interpolation is often used for animation. In that case, `amount`\n * would start at 0 and you would keep interpolating up to `1`\n * @example\n * ```js\n * import { interpolate } from 'https://unpkg.com/ixfx/dist/data.js';\n * import { percentPingPong } from 'https://unpkg.com/ixfx/dist/modulation.js'\n *\n * // Go back and forth between 0 and 1 by 0.1\n * let pp = percentPingPong(0.1);\n * continuously(() => {\n *  // Get position in ping-pong\n *  const amt = pp.next().value;\n *  // interpolate between Math.PI and Math.PI*2\n *  const v = interpolate(amt, Math.PI, Math.PI*2);\n *  // do something with v...\n * }).start();\n * ```\n *\n * See also {@link Visual.Colour.interpolate | Visual.Colour.interpolate }, {@link Geometry.Points.interpolate | Geometry.Points.interpolate}.\n * @param amount Interpolation amount, between 0 and 1 inclusive\n * @param a Start (ie when `amt` is 0)\n * @param b End (ie. when `amt` is 1)\n * @returns Interpolated value which will be between `a` and `b`.\n */\nexport const interpolate = (amount: number, a: number, b: number): number => {\n  const v = (1 - amount) * a + amount * b;\n  return v;\n};\n\n/**\n * Interpolate between angles `a` and `b` by `amount`. Angles are in radians.\n *\n * ```js\n * import { interpolateAngle } from 'https://unpkg.com/ixfx/dist/data.js';\n * interpolateAngle(0.5, Math.PI, Math.PI/2);\n * ```\n * @param amount\n * @param aRadians\n * @param bRadians\n * @returns\n */\nexport const interpolateAngle = (\n  amount: number,\n  aRadians: number,\n  bRadians: number\n): number => {\n  const t = wrap(bRadians - aRadians, 0, piPi);\n  return interpolate(amount, aRadians, aRadians + (t > Math.PI ? t - piPi : t));\n};\n","import { defaultRandom, type RandomSource } from './Types.js';\nimport { type EasingName, get as EasingGet } from '../modulation/Easing.js';\n/**\n * Options for producing weighted distribution\n */\nexport type WeightedOptions = Readonly<{\n  /**\n   * Easing function to use (optional)\n   */\n  easing?: EasingName;\n  /**\n   * Random source (optional)\n   */\n  source?: RandomSource;\n}>\n/***\n * Returns a random number, 0..1, weighted by a given easing function.\n * Default easing is `quadIn`, which skews towards zero.\n *\n * Use {@link weightedSource} to return a function instead.\n *\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * Random.weighted();          // quadIn easing by default, which skews toward low values\n * Random.weighted(`quadOut`); // quadOut favours high values\n * ```\n * @param easingNameOrOpts Options. Uses 'quadIn' by default.\n * @see {@link weightedSource} Returns a function rather than value\n * @returns Random number (0-1)\n */\nexport const weighted = (\n  easingNameOrOptions: EasingName | WeightedOptions = `quadIn`\n): number => weightedSource(easingNameOrOptions)();\n\n/***\n * Returns a random number, 0..1, weighted by a given easing function.\n * Default easing is `quadIn`, which skews towards zero.\n * Use {@link weighted} to get a value directly.\n *\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * const r1 = Random.weightedSource();          // quadIn easing by default, which skews toward low values\n * r1(); // Produce a value\n *\n * const r2 = Random.weightedSource(`quadOut`); // quadOut favours high values\n * r2(); // Produce a value\n * ```\n * @param easingName Easing name or options `quadIn` by default.\n * @see {@link weighted} Returns value instead of function\n * @returns Function which returns a weighted random value\n */\nexport const weightedSource = (\n  easingNameOrOptions: EasingName | WeightedOptions = `quadIn`\n): RandomSource => {\n  const options =\n    typeof easingNameOrOptions === `string`\n      ? { easing: easingNameOrOptions }\n      : easingNameOrOptions;\n  const source = options.source ?? defaultRandom;\n  const easingName = options.easing ?? `quadIn`;\n  const easingFunction = EasingGet(easingName);\n  if (easingFunction === undefined) {\n    throw new Error(`Easing function '${ easingName }' not found.`);\n  }\n\n  const compute = (): number => {\n    const r = source();\n    return easingFunction(r);\n  };\n  return compute;\n};","import { clamp } from \"../data/Clamp.js\";\nimport { type RandomSource, defaultRandom } from \"./Types.js\";\nimport type { WeightedOptions } from \"./Weighted.js\";\nimport { numberTest as guardNumberTest, throwFromResult } from '../Guards.js';\nimport { get as EasingGet } from '../modulation/Easing.js';\nexport type WeightedIntegerOptions = WeightedOptions & Readonly<{\n  min?: number;\n  max: number;\n}>;\n/**\n * Random integer, weighted according to an easing function.\n * Number will be inclusive of `min` and below `max`.\n *\n * @example 0..99\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * const r = Random.weightedIntegerFn(100);\n * r(); // Produce value\n * ```\n *\n * @example 20..29\n * ```js\n * const r = Random.weightedIntegerFn({ min: 20, max: 30 });\n * r(); // Produce value\n * ```\n *\n * @example  0..99 with 'quadIn' easing\n * ```js\n * const r = Random.weightedInteger({ max: 100, easing: `quadIn` });\n * ```\n *\n * Note: result from easing function will be clamped to\n * the min/max (by default 0-1);\n *\n * @param maxOrOptions Maximum (exclusive)\n * @returns Function that produces a random weighted integer\n */\nexport const weightedIntegerSource = (\n  maxOrOptions: number | WeightedIntegerOptions\n): RandomSource => {\n  const options = typeof maxOrOptions === `number` ? { max: maxOrOptions } : maxOrOptions;\n  const source = options.source ?? defaultRandom;\n  const max = options.max;\n  const min = options.min ?? 0;\n  const easingName = options.easing ?? `quadIn`;\n  if (typeof max === `undefined`) throw new Error(`max field is undefined`);\n  if (typeof easingName !== `string`) {\n    throw new TypeError(`easing field expected to be string`);\n  }\n  throwFromResult(guardNumberTest(max));\n\n  const easingFunction = EasingGet(easingName);\n  if (easingFunction === undefined) {\n    throw new Error(`Easing '${ easingName }' not found`);\n  }\n\n  throwFromResult(guardNumberTest(min));\n  if (max <= min) throw new Error(`Max should be greater than min`);\n\n  const compute = (): number => {\n    const r = clamp(easingFunction(source()));\n    return Math.floor(r * (max - min)) + min;\n  };\n  return compute;\n};\n\n/**\n * @example 0..99\n * ```js\n * import * as Random from 'https://unpkg.com/ixfx/dist/random.js';\n * Random.weightedInteger(100);\n * ```\n *\n * @example 20..29\n * ```js\n * Random.weightedInteger({ min: 20, max: 30 });\n * ```\n *\n * @example  0..99 with 'quadIn' easing\n * ```js\n * Random.weightedInteger({ max: 100, easing: `quadIn` })\n * ```\n * @inheritDoc {@link weightedIntegerSource}\n * @param maxOrOptions\n * @returns Random weighted integer\n */\nexport const weightedInteger = (maxOrOptions: number | WeightedIntegerOptions): number =>\n  weightedIntegerSource(maxOrOptions)();"],"mappings":"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","names":["gaussian","opacity","opacity","opacity","opacity","t1","t2","t3","color","rgb","opacity","i","hsl","hue","opacity","lab","opacity","hcl","hue","opacity","cubehelix","hue","opacity","interpolate","i","hue","rgb","lab","interpolate","t2","t3","interpolate","gaussian"]}